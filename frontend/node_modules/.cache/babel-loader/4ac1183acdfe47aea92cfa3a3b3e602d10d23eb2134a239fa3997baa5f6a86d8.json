{"ast":null,"code":"var _jsxFileName = \"/Users/i.malashenko/Desktop/project \\u043A\\u043E\\u043F\\u0456\\u044F/react-fastapi-app/frontend/src/contexts/ThemeContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext(undefined);\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  // Check if dark theme preference is saved in localStorage\n  const storedTheme = localStorage.getItem('darkTheme');\n  const [darkTheme, setDarkTheme] = useState(storedTheme ? JSON.parse(storedTheme) : false);\n\n  // Update localStorage when theme changes\n  useEffect(() => {\n    localStorage.setItem('darkTheme', JSON.stringify(darkTheme));\n\n    // Apply theme class to body\n    if (darkTheme) {\n      document.body.classList.add('dark-theme');\n      document.body.classList.remove('light-theme');\n    } else {\n      document.body.classList.add('light-theme');\n      document.body.classList.remove('dark-theme');\n    }\n  }, [darkTheme]);\n  const toggleTheme = () => {\n    setDarkTheme(prevTheme => !prevTheme);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      darkTheme,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"9BNqn7WHNrbRCiPYeL5WAdiLOs0=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n_s2(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","ThemeContext","undefined","ThemeProvider","children","_s","storedTheme","localStorage","getItem","darkTheme","setDarkTheme","JSON","parse","setItem","stringify","document","body","classList","add","remove","toggleTheme","prevTheme","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","context","Error","$RefreshReg$"],"sources":["/Users/i.malashenko/Desktop/project копія/react-fastapi-app/frontend/src/contexts/ThemeContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect, ReactNode } from 'react';\n\ninterface ThemeContextType {\n  darkTheme: boolean;\n  toggleTheme: () => void;\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\ninterface ThemeProviderProps {\n  children: ReactNode;\n}\n\nexport const ThemeProvider = ({ children }: ThemeProviderProps) => {\n  // Check if dark theme preference is saved in localStorage\n  const storedTheme = localStorage.getItem('darkTheme');\n  const [darkTheme, setDarkTheme] = useState<boolean>(\n    storedTheme ? JSON.parse(storedTheme) : false\n  );\n\n  // Update localStorage when theme changes\n  useEffect(() => {\n    localStorage.setItem('darkTheme', JSON.stringify(darkTheme));\n    \n    // Apply theme class to body\n    if (darkTheme) {\n      document.body.classList.add('dark-theme');\n      document.body.classList.remove('light-theme');\n    } else {\n      document.body.classList.add('light-theme');\n      document.body.classList.remove('dark-theme');\n    }\n  }, [darkTheme]);\n\n  const toggleTheme = () => {\n    setDarkTheme(prevTheme => !prevTheme);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ darkTheme, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = (): ThemeContextType => {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOzF,MAAMC,YAAY,gBAAGN,aAAa,CAA+BO,SAAS,CAAC;AAM3E,OAAO,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAA6B,CAAC,KAAK;EAAAC,EAAA;EACjE;EACA,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EACrD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CACxCU,WAAW,GAAGK,IAAI,CAACC,KAAK,CAACN,WAAW,CAAC,GAAG,KAC1C,CAAC;;EAED;EACAR,SAAS,CAAC,MAAM;IACdS,YAAY,CAACM,OAAO,CAAC,WAAW,EAAEF,IAAI,CAACG,SAAS,CAACL,SAAS,CAAC,CAAC;;IAE5D;IACA,IAAIA,SAAS,EAAE;MACbM,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,YAAY,CAAC;MACzCH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,aAAa,CAAC;IAC/C,CAAC,MAAM;MACLJ,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,aAAa,CAAC;MAC1CH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,YAAY,CAAC;IAC9C;EACF,CAAC,EAAE,CAACV,SAAS,CAAC,CAAC;EAEf,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACxBV,YAAY,CAACW,SAAS,IAAI,CAACA,SAAS,CAAC;EACvC,CAAC;EAED,oBACErB,OAAA,CAACC,YAAY,CAACqB,QAAQ;IAACC,KAAK,EAAE;MAAEd,SAAS;MAAEW;IAAY,CAAE;IAAAhB,QAAA,EACtDA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACtB,EAAA,CA9BWF,aAAa;AAAAyB,EAAA,GAAbzB,aAAa;AAgC1B,OAAO,MAAM0B,QAAQ,GAAGA,CAAA,KAAwB;EAAAC,GAAA;EAC9C,MAAMC,OAAO,GAAGlC,UAAU,CAACI,YAAY,CAAC;EACxC,IAAI8B,OAAO,KAAK7B,SAAS,EAAE;IACzB,MAAM,IAAI8B,KAAK,CAAC,8CAA8C,CAAC;EACjE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,QAAQ;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}