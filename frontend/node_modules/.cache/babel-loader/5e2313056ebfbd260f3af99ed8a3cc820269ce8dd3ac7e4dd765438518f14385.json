{"ast":null,"code":"import React from'react';import{Navigate}from'react-router-dom';import{jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const AuthRoute=_ref=>{let{children}=_ref;// Check if user is authenticated\nconst isAuthenticated=()=>{const token=localStorage.getItem('token');return!!token;};// If not authenticated, redirect to login\nif(!isAuthenticated()){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\"});}// If authenticated, render the children\nreturn/*#__PURE__*/_jsx(_Fragment,{children:children});};export default AuthRoute;","map":{"version":3,"names":["React","Navigate","jsx","_jsx","Fragment","_Fragment","AuthRoute","_ref","children","isAuthenticated","token","localStorage","getItem","to"],"sources":["/Users/i.malashenko/Desktop/project копія/react-fastapi-app/frontend/src/components/common/AuthRoute.tsx"],"sourcesContent":["import React from 'react';\nimport { Navigate } from 'react-router-dom';\n\ninterface AuthRouteProps {\n  children: React.ReactNode;\n}\n\nconst AuthRoute: React.FC<AuthRouteProps> = ({ children }) => {\n  // Check if user is authenticated\n  const isAuthenticated = () => {\n    const token = localStorage.getItem('token');\n    return !!token;\n  };\n\n  // If not authenticated, redirect to login\n  if (!isAuthenticated()) {\n    return <Navigate to=\"/login\" />;\n  }\n\n  // If authenticated, render the children\n  return <>{children}</>;\n};\n\nexport default AuthRoute; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,yBAM5C,KAAM,CAAAC,SAAmC,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvD;AACA,KAAM,CAAAE,eAAe,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,MAAO,CAAC,CAACF,KAAK,CAChB,CAAC,CAED;AACA,GAAI,CAACD,eAAe,CAAC,CAAC,CAAE,CACtB,mBAAON,IAAA,CAACF,QAAQ,EAACY,EAAE,CAAC,QAAQ,CAAE,CAAC,CACjC,CAEA;AACA,mBAAOV,IAAA,CAAAE,SAAA,EAAAG,QAAA,CAAGA,QAAQ,CAAG,CAAC,CACxB,CAAC,CAED,cAAe,CAAAF,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}