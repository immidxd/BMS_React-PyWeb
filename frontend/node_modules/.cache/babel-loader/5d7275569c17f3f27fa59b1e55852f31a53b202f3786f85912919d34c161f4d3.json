{"ast":null,"code":"import React,{createContext,useState,useContext,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const ThemeContext=/*#__PURE__*/createContext(undefined);export const ThemeProvider=_ref=>{let{children}=_ref;// Check if dark theme preference is saved in localStorage\nconst storedTheme=localStorage.getItem('darkTheme');const[darkTheme,setDarkTheme]=useState(storedTheme?JSON.parse(storedTheme):false);// Update localStorage when theme changes\nuseEffect(()=>{localStorage.setItem('darkTheme',JSON.stringify(darkTheme));// Apply theme class to body\nif(darkTheme){document.body.classList.add('dark-theme');document.body.classList.remove('light-theme');}else{document.body.classList.add('light-theme');document.body.classList.remove('dark-theme');}},[darkTheme]);const toggleTheme=()=>{setDarkTheme(prevTheme=>!prevTheme);};return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:{darkTheme,toggleTheme},children:children});};export const useTheme=()=>{const context=useContext(ThemeContext);if(context===undefined){throw new Error('useTheme must be used within a ThemeProvider');}return context;};","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsx","_jsx","ThemeContext","undefined","ThemeProvider","_ref","children","storedTheme","localStorage","getItem","darkTheme","setDarkTheme","JSON","parse","setItem","stringify","document","body","classList","add","remove","toggleTheme","prevTheme","Provider","value","useTheme","context","Error"],"sources":["/Users/i.malashenko/Desktop/project копія/react-fastapi-app/frontend/src/contexts/ThemeContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect, ReactNode } from 'react';\n\ninterface ThemeContextType {\n  darkTheme: boolean;\n  toggleTheme: () => void;\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\ninterface ThemeProviderProps {\n  children: ReactNode;\n}\n\nexport const ThemeProvider = ({ children }: ThemeProviderProps) => {\n  // Check if dark theme preference is saved in localStorage\n  const storedTheme = localStorage.getItem('darkTheme');\n  const [darkTheme, setDarkTheme] = useState<boolean>(\n    storedTheme ? JSON.parse(storedTheme) : false\n  );\n\n  // Update localStorage when theme changes\n  useEffect(() => {\n    localStorage.setItem('darkTheme', JSON.stringify(darkTheme));\n    \n    // Apply theme class to body\n    if (darkTheme) {\n      document.body.classList.add('dark-theme');\n      document.body.classList.remove('light-theme');\n    } else {\n      document.body.classList.add('light-theme');\n      document.body.classList.remove('dark-theme');\n    }\n  }, [darkTheme]);\n\n  const toggleTheme = () => {\n    setDarkTheme(prevTheme => !prevTheme);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ darkTheme, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = (): ThemeContextType => {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n}; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,UAAU,CAAEC,SAAS,KAAmB,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAOzF,KAAM,CAAAC,YAAY,cAAGN,aAAa,CAA+BO,SAAS,CAAC,CAM3E,MAAO,MAAM,CAAAC,aAAa,CAAGC,IAAA,EAAsC,IAArC,CAAEC,QAA6B,CAAC,CAAAD,IAAA,CAC5D;AACA,KAAM,CAAAE,WAAW,CAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CACrD,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGd,QAAQ,CACxCU,WAAW,CAAGK,IAAI,CAACC,KAAK,CAACN,WAAW,CAAC,CAAG,KAC1C,CAAC,CAED;AACAR,SAAS,CAAC,IAAM,CACdS,YAAY,CAACM,OAAO,CAAC,WAAW,CAAEF,IAAI,CAACG,SAAS,CAACL,SAAS,CAAC,CAAC,CAE5D;AACA,GAAIA,SAAS,CAAE,CACbM,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,YAAY,CAAC,CACzCH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,aAAa,CAAC,CAC/C,CAAC,IAAM,CACLJ,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,aAAa,CAAC,CAC1CH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,YAAY,CAAC,CAC9C,CACF,CAAC,CAAE,CAACV,SAAS,CAAC,CAAC,CAEf,KAAM,CAAAW,WAAW,CAAGA,CAAA,GAAM,CACxBV,YAAY,CAACW,SAAS,EAAI,CAACA,SAAS,CAAC,CACvC,CAAC,CAED,mBACErB,IAAA,CAACC,YAAY,CAACqB,QAAQ,EAACC,KAAK,CAAE,CAAEd,SAAS,CAAEW,WAAY,CAAE,CAAAf,QAAA,CACtDA,QAAQ,CACY,CAAC,CAE5B,CAAC,CAED,MAAO,MAAM,CAAAmB,QAAQ,CAAGA,CAAA,GAAwB,CAC9C,KAAM,CAAAC,OAAO,CAAG5B,UAAU,CAACI,YAAY,CAAC,CACxC,GAAIwB,OAAO,GAAKvB,SAAS,CAAE,CACzB,KAAM,IAAI,CAAAwB,KAAK,CAAC,8CAA8C,CAAC,CACjE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}