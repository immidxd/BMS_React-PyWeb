{"ast":null,"code":"var _jsxFileName = \"/Users/i.malashenko/Desktop/project \\u043A\\u043E\\u043F\\u0456\\u044F/react-fastapi-app/frontend/src/pages/OrdersTab.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { fetchOrders } from '../services/orderService';\nimport { fetchOrderStatuses, fetchPaymentStatuses, fetchDeliveryMethods } from '../services/referenceService';\nimport { useTheme } from '../contexts/ThemeContext';\nimport OrdersTable from '../components/orders/OrdersTable';\nimport CollapsibleSection from '../components/common/CollapsibleSection';\nimport RangeSlider from '../components/common/RangeSlider';\nimport Pagination from '../components/common/Pagination';\nimport LoadingSpinner from '../components/common/LoadingSpinner';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TabContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n_c = TabContainer;\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n_c2 = Header;\nconst Title = styled.h1`\n  font-size: 24px;\n  margin: 0;\n`;\n_c3 = Title;\nconst SearchContainer = styled.div`\n  position: relative;\n  flex: 1;\n  max-width: 500px;\n  margin: 0 20px;\n`;\n_c4 = SearchContainer;\nconst SearchInput = styled.input`\n  width: 100%;\n  padding: 10px 15px 10px 40px;\n  border-radius: 4px;\n  border: 1px solid ${props => props.isDarkTheme ? 'var(--dark-border-color)' : 'var(--light-border-color)'};\n  background-color: ${props => props.isDarkTheme ? '#333' : 'white'};\n  color: ${props => props.isDarkTheme ? 'var(--dark-text-color)' : 'var(--light-text-color)'};\n  transition: border-color 0.2s;\n  font-size: 16px;\n\n  &:focus {\n    outline: none;\n    border-color: var(--light-accent-color);\n  }\n`;\n_c5 = SearchInput;\nconst SearchIcon = styled.div`\n  position: absolute;\n  left: 12px;\n  top: 50%;\n  transform: translateY(-50%);\n  color: #888;\n`;\n_c6 = SearchIcon;\nconst FiltersContainer = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n_c7 = FiltersContainer;\nconst FiltersColumn = styled.div`\n  flex: 1;\n  max-width: 300px;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n_c8 = FiltersColumn;\nconst MainContentArea = styled.div`\n  flex: 3;\n`;\n_c9 = MainContentArea;\nconst ColoredCheckbox = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 8px;\n  \n  .checkbox-label {\n    position: relative;\n    padding-left: 32px;\n    cursor: pointer;\n    user-select: none;\n    \n    &:before {\n      content: '';\n      position: absolute;\n      left: 0;\n      top: 0;\n      width: 18px;\n      height: 18px;\n      border-radius: 3px;\n      background-color: ${props => props.color};\n      border: 1px solid rgba(0, 0, 0, 0.2);\n    }\n  }\n  \n  input {\n    position: absolute;\n    opacity: 0;\n    cursor: pointer;\n    \n    &:checked + .checkbox-label:after {\n      content: '✓';\n      position: absolute;\n      left: 4px;\n      top: -2px;\n      color: ${props => props.color.startsWith('#fff') || props.color.startsWith('#f') ? 'black' : 'white'};\n      font-weight: bold;\n    }\n  }\n`;\n_c10 = ColoredCheckbox;\nconst OrdersCount = styled.div`\n  margin-top: 20px;\n  font-size: 14px;\n  color: #666;\n`;\n_c11 = OrdersCount;\nconst OrdersTab = () => {\n  _s();\n  var _filters$month_min, _filters$month_max, _filters$year_min, _filters$year_max;\n  const {\n    darkTheme\n  } = useTheme();\n  const [page, setPage] = useState(1);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filters, setFilters] = useState({});\n  const currentYear = new Date().getFullYear();\n\n  // Fetch reference data for filters\n  const {\n    data: orderStatuses,\n    isLoading: isLoadingOrderStatuses\n  } = useQuery({\n    queryKey: ['orderStatuses'],\n    queryFn: fetchOrderStatuses\n  });\n  const {\n    data: paymentStatuses,\n    isLoading: isLoadingPaymentStatuses\n  } = useQuery({\n    queryKey: ['paymentStatuses'],\n    queryFn: fetchPaymentStatuses\n  });\n  const {\n    data: deliveryMethods,\n    isLoading: isLoadingDeliveryMethods\n  } = useQuery({\n    queryKey: ['deliveryMethods'],\n    queryFn: fetchDeliveryMethods\n  });\n\n  // Fetch orders based on current filters and pagination\n  const {\n    data: ordersData,\n    isLoading: isLoadingOrders\n  } = useQuery({\n    queryKey: ['orders', page, filters, searchTerm],\n    queryFn: () => fetchOrders(page, 20, {\n      ...filters,\n      search: searchTerm\n    }),\n    keepPreviousData: true\n  });\n\n  // Handle search input change\n  const handleSearchChange = e => {\n    setSearchTerm(e.target.value);\n    setPage(1); // Reset to first page when search changes\n  };\n\n  // Update status filters\n  const handleStatusChange = statusIds => {\n    setFilters(prev => ({\n      ...prev,\n      order_status_ids: statusIds.length ? statusIds : undefined\n    }));\n    setPage(1);\n  };\n\n  // Update payment status filters\n  const handlePaymentStatusChange = statusIds => {\n    setFilters(prev => ({\n      ...prev,\n      payment_status_ids: statusIds.length ? statusIds : undefined\n    }));\n    setPage(1);\n  };\n\n  // Update delivery method filters\n  const handleDeliveryMethodChange = methodIds => {\n    setFilters(prev => ({\n      ...prev,\n      delivery_method_ids: methodIds.length ? methodIds : undefined\n    }));\n    setPage(1);\n  };\n\n  // Update month range filter\n  const handleMonthRangeChange = values => {\n    setFilters(prev => ({\n      ...prev,\n      month_min: values[0],\n      month_max: values[1]\n    }));\n    setPage(1);\n  };\n\n  // Update year range filter\n  const handleYearRangeChange = values => {\n    setFilters(prev => ({\n      ...prev,\n      year_min: values[0],\n      year_max: values[1]\n    }));\n    setPage(1);\n  };\n\n  // Handle page change\n  const handlePageChange = newPage => {\n    setPage(newPage);\n  };\n\n  // Loading state\n  if (isLoadingOrderStatuses || isLoadingPaymentStatuses || isLoadingDeliveryMethods) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(TabContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchContainer, {\n        children: [/*#__PURE__*/_jsxDEV(SearchIcon, {\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faSearch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SearchInput, {\n          type: \"text\",\n          placeholder: \"Search orders...\",\n          value: searchTerm,\n          onChange: handleSearchChange,\n          isDarkTheme: darkTheme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FiltersContainer, {\n      children: [/*#__PURE__*/_jsxDEV(FiltersColumn, {\n        children: [orderStatuses && /*#__PURE__*/_jsxDEV(CollapsibleSection, {\n          title: \"Order Status\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: orderStatuses.items.map(status => {\n              var _filters$order_status;\n              return /*#__PURE__*/_jsxDEV(ColoredCheckbox, {\n                color: status.color_code || '#e0e0e0',\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  id: `status-${status.id}`,\n                  checked: ((_filters$order_status = filters.order_status_ids) === null || _filters$order_status === void 0 ? void 0 : _filters$order_status.includes(status.id)) || false,\n                  onChange: e => {\n                    const currentIds = filters.order_status_ids || [];\n                    if (e.target.checked) {\n                      handleStatusChange([...currentIds, status.id]);\n                    } else {\n                      handleStatusChange(currentIds.filter(id => id !== status.id));\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: `status-${status.id}`,\n                  className: \"checkbox-label\",\n                  children: status.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 21\n                }, this)]\n              }, status.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this), paymentStatuses && /*#__PURE__*/_jsxDEV(CollapsibleSection, {\n          title: \"Payment Status\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: paymentStatuses.items.map(status => {\n              var _filters$payment_stat;\n              return /*#__PURE__*/_jsxDEV(ColoredCheckbox, {\n                color: status.color_code || '#e0e0e0',\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  id: `payment-${status.id}`,\n                  checked: ((_filters$payment_stat = filters.payment_status_ids) === null || _filters$payment_stat === void 0 ? void 0 : _filters$payment_stat.includes(status.id)) || false,\n                  onChange: e => {\n                    const currentIds = filters.payment_status_ids || [];\n                    if (e.target.checked) {\n                      handlePaymentStatusChange([...currentIds, status.id]);\n                    } else {\n                      handlePaymentStatusChange(currentIds.filter(id => id !== status.id));\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: `payment-${status.id}`,\n                  className: \"checkbox-label\",\n                  children: status.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 21\n                }, this)]\n              }, status.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this), deliveryMethods && /*#__PURE__*/_jsxDEV(CollapsibleSection, {\n          title: \"Delivery Method\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: deliveryMethods.items.map(method => {\n              var _filters$delivery_met;\n              return /*#__PURE__*/_jsxDEV(ColoredCheckbox, {\n                color: method.color_code || '#e0e0e0',\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  id: `delivery-${method.id}`,\n                  checked: ((_filters$delivery_met = filters.delivery_method_ids) === null || _filters$delivery_met === void 0 ? void 0 : _filters$delivery_met.includes(method.id)) || false,\n                  onChange: e => {\n                    const currentIds = filters.delivery_method_ids || [];\n                    if (e.target.checked) {\n                      handleDeliveryMethodChange([...currentIds, method.id]);\n                    } else {\n                      handleDeliveryMethodChange(currentIds.filter(id => id !== method.id));\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: `delivery-${method.id}`,\n                  className: \"checkbox-label\",\n                  children: method.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 21\n                }, this)]\n              }, method.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CollapsibleSection, {\n          title: \"Month Range\",\n          children: /*#__PURE__*/_jsxDEV(RangeSlider, {\n            min: 1,\n            max: 12,\n            value: [(_filters$month_min = filters.month_min) !== null && _filters$month_min !== void 0 ? _filters$month_min : 1, (_filters$month_max = filters.month_max) !== null && _filters$month_max !== void 0 ? _filters$month_max : 12],\n            onChange: handleMonthRangeChange,\n            formatLabel: value => {\n              const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n              return months[value - 1];\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CollapsibleSection, {\n          title: \"Year Range\",\n          children: /*#__PURE__*/_jsxDEV(RangeSlider, {\n            min: currentYear - 5,\n            max: currentYear,\n            value: [(_filters$year_min = filters.year_min) !== null && _filters$year_min !== void 0 ? _filters$year_min : currentYear - 5, (_filters$year_max = filters.year_max) !== null && _filters$year_max !== void 0 ? _filters$year_max : currentYear],\n            onChange: handleYearRangeChange,\n            formatLabel: value => `${value}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MainContentArea, {\n        children: isLoadingOrders ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(OrdersTable, {\n            orders: (ordersData === null || ordersData === void 0 ? void 0 : ordersData.items) || [],\n            orderStatuses: (orderStatuses === null || orderStatuses === void 0 ? void 0 : orderStatuses.items) || [],\n            paymentStatuses: (paymentStatuses === null || paymentStatuses === void 0 ? void 0 : paymentStatuses.items) || [],\n            deliveryMethods: (deliveryMethods === null || deliveryMethods === void 0 ? void 0 : deliveryMethods.items) || []\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this), ordersData && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Pagination, {\n              currentPage: page,\n              totalPages: ordersData.pages,\n              onPageChange: handlePageChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(OrdersCount, {\n              children: [\"Showing \", ordersData.items.length, \" of \", ordersData.total, \" orders\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n};\n_s(OrdersTab, \"Z5GaB74qcExjSH9JD1xy+MCDh9I=\", false, function () {\n  return [useTheme, useQuery, useQuery, useQuery, useQuery];\n});\n_c12 = OrdersTab;\nexport default OrdersTab;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n$RefreshReg$(_c, \"TabContainer\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"SearchContainer\");\n$RefreshReg$(_c5, \"SearchInput\");\n$RefreshReg$(_c6, \"SearchIcon\");\n$RefreshReg$(_c7, \"FiltersContainer\");\n$RefreshReg$(_c8, \"FiltersColumn\");\n$RefreshReg$(_c9, \"MainContentArea\");\n$RefreshReg$(_c10, \"ColoredCheckbox\");\n$RefreshReg$(_c11, \"OrdersCount\");\n$RefreshReg$(_c12, \"OrdersTab\");","map":{"version":3,"names":["React","useState","useQuery","styled","FontAwesomeIcon","faSearch","fetchOrders","fetchOrderStatuses","fetchPaymentStatuses","fetchDeliveryMethods","useTheme","OrdersTable","CollapsibleSection","RangeSlider","Pagination","LoadingSpinner","jsxDEV","_jsxDEV","Fragment","_Fragment","TabContainer","div","_c","Header","_c2","Title","h1","_c3","SearchContainer","_c4","SearchInput","input","props","isDarkTheme","_c5","SearchIcon","_c6","FiltersContainer","_c7","FiltersColumn","_c8","MainContentArea","_c9","ColoredCheckbox","color","startsWith","_c10","OrdersCount","_c11","OrdersTab","_s","_filters$month_min","_filters$month_max","_filters$year_min","_filters$year_max","darkTheme","page","setPage","searchTerm","setSearchTerm","filters","setFilters","currentYear","Date","getFullYear","data","orderStatuses","isLoading","isLoadingOrderStatuses","queryKey","queryFn","paymentStatuses","isLoadingPaymentStatuses","deliveryMethods","isLoadingDeliveryMethods","ordersData","isLoadingOrders","search","keepPreviousData","handleSearchChange","e","target","value","handleStatusChange","statusIds","prev","order_status_ids","length","undefined","handlePaymentStatusChange","payment_status_ids","handleDeliveryMethodChange","methodIds","delivery_method_ids","handleMonthRangeChange","values","month_min","month_max","handleYearRangeChange","year_min","year_max","handlePageChange","newPage","fileName","_jsxFileName","lineNumber","columnNumber","children","icon","type","placeholder","onChange","title","items","map","status","_filters$order_status","color_code","id","checked","includes","currentIds","filter","htmlFor","className","name","_filters$payment_stat","method","_filters$delivery_met","min","max","formatLabel","months","orders","currentPage","totalPages","pages","onPageChange","total","_c12","$RefreshReg$"],"sources":["/Users/i.malashenko/Desktop/project копія/react-fastapi-app/frontend/src/pages/OrdersTab.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nimport { fetchOrders, OrderFilters } from '../services/orderService';\nimport { fetchOrderStatuses, fetchPaymentStatuses, fetchDeliveryMethods } from '../services/referenceService';\nimport { useTheme } from '../contexts/ThemeContext';\nimport OrdersTable from '../components/orders/OrdersTable';\nimport FilterSection from '../components/common/FilterSection';\nimport CollapsibleSection from '../components/common/CollapsibleSection';\nimport RangeSlider from '../components/common/RangeSlider';\nimport Pagination from '../components/common/Pagination';\nimport LoadingSpinner from '../components/common/LoadingSpinner';\n\nconst TabContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nconst Title = styled.h1`\n  font-size: 24px;\n  margin: 0;\n`;\n\nconst SearchContainer = styled.div`\n  position: relative;\n  flex: 1;\n  max-width: 500px;\n  margin: 0 20px;\n`;\n\nconst SearchInput = styled.input<{ isDarkTheme: boolean }>`\n  width: 100%;\n  padding: 10px 15px 10px 40px;\n  border-radius: 4px;\n  border: 1px solid ${props => props.isDarkTheme ? 'var(--dark-border-color)' : 'var(--light-border-color)'};\n  background-color: ${props => props.isDarkTheme ? '#333' : 'white'};\n  color: ${props => props.isDarkTheme ? 'var(--dark-text-color)' : 'var(--light-text-color)'};\n  transition: border-color 0.2s;\n  font-size: 16px;\n\n  &:focus {\n    outline: none;\n    border-color: var(--light-accent-color);\n  }\n`;\n\nconst SearchIcon = styled.div`\n  position: absolute;\n  left: 12px;\n  top: 50%;\n  transform: translateY(-50%);\n  color: #888;\n`;\n\nconst FiltersContainer = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nconst FiltersColumn = styled.div`\n  flex: 1;\n  max-width: 300px;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nconst MainContentArea = styled.div`\n  flex: 3;\n`;\n\nconst ColoredCheckbox = styled.div<{ color: string }>`\n  display: flex;\n  align-items: center;\n  margin-bottom: 8px;\n  \n  .checkbox-label {\n    position: relative;\n    padding-left: 32px;\n    cursor: pointer;\n    user-select: none;\n    \n    &:before {\n      content: '';\n      position: absolute;\n      left: 0;\n      top: 0;\n      width: 18px;\n      height: 18px;\n      border-radius: 3px;\n      background-color: ${props => props.color};\n      border: 1px solid rgba(0, 0, 0, 0.2);\n    }\n  }\n  \n  input {\n    position: absolute;\n    opacity: 0;\n    cursor: pointer;\n    \n    &:checked + .checkbox-label:after {\n      content: '✓';\n      position: absolute;\n      left: 4px;\n      top: -2px;\n      color: ${props => props.color.startsWith('#fff') || props.color.startsWith('#f') ? 'black' : 'white'};\n      font-weight: bold;\n    }\n  }\n`;\n\nconst OrdersCount = styled.div`\n  margin-top: 20px;\n  font-size: 14px;\n  color: #666;\n`;\n\nconst OrdersTab: React.FC = () => {\n  const { darkTheme } = useTheme();\n  const [page, setPage] = useState(1);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filters, setFilters] = useState<OrderFilters>({});\n  const currentYear = new Date().getFullYear();\n  \n  // Fetch reference data for filters\n  const { data: orderStatuses, isLoading: isLoadingOrderStatuses } = useQuery({\n    queryKey: ['orderStatuses'],\n    queryFn: fetchOrderStatuses,\n  });\n  \n  const { data: paymentStatuses, isLoading: isLoadingPaymentStatuses } = useQuery({\n    queryKey: ['paymentStatuses'],\n    queryFn: fetchPaymentStatuses,\n  });\n  \n  const { data: deliveryMethods, isLoading: isLoadingDeliveryMethods } = useQuery({\n    queryKey: ['deliveryMethods'],\n    queryFn: fetchDeliveryMethods,\n  });\n\n  // Fetch orders based on current filters and pagination\n  const { data: ordersData, isLoading: isLoadingOrders } = useQuery({\n    queryKey: ['orders', page, filters, searchTerm],\n    queryFn: () => fetchOrders(page, 20, { ...filters, search: searchTerm }),\n    keepPreviousData: true,\n  });\n\n  // Handle search input change\n  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTerm(e.target.value);\n    setPage(1); // Reset to first page when search changes\n  };\n\n  // Update status filters\n  const handleStatusChange = (statusIds: number[]) => {\n    setFilters(prev => ({\n      ...prev,\n      order_status_ids: statusIds.length ? statusIds : undefined,\n    }));\n    setPage(1);\n  };\n\n  // Update payment status filters\n  const handlePaymentStatusChange = (statusIds: number[]) => {\n    setFilters(prev => ({\n      ...prev,\n      payment_status_ids: statusIds.length ? statusIds : undefined,\n    }));\n    setPage(1);\n  };\n\n  // Update delivery method filters\n  const handleDeliveryMethodChange = (methodIds: number[]) => {\n    setFilters(prev => ({\n      ...prev,\n      delivery_method_ids: methodIds.length ? methodIds : undefined,\n    }));\n    setPage(1);\n  };\n\n  // Update month range filter\n  const handleMonthRangeChange = (values: number[]) => {\n    setFilters(prev => ({\n      ...prev,\n      month_min: values[0],\n      month_max: values[1],\n    }));\n    setPage(1);\n  };\n\n  // Update year range filter\n  const handleYearRangeChange = (values: number[]) => {\n    setFilters(prev => ({\n      ...prev,\n      year_min: values[0],\n      year_max: values[1],\n    }));\n    setPage(1);\n  };\n\n  // Handle page change\n  const handlePageChange = (newPage: number) => {\n    setPage(newPage);\n  };\n\n  // Loading state\n  if (isLoadingOrderStatuses || isLoadingPaymentStatuses || isLoadingDeliveryMethods) {\n    return <LoadingSpinner />;\n  }\n\n  return (\n    <TabContainer>\n      <Header>\n        <Title>Orders</Title>\n        <SearchContainer>\n          <SearchIcon>\n            <FontAwesomeIcon icon={faSearch} />\n          </SearchIcon>\n          <SearchInput\n            type=\"text\"\n            placeholder=\"Search orders...\"\n            value={searchTerm}\n            onChange={handleSearchChange}\n            isDarkTheme={darkTheme}\n          />\n        </SearchContainer>\n      </Header>\n\n      <FiltersContainer>\n        <FiltersColumn>\n          {orderStatuses && (\n            <CollapsibleSection title=\"Order Status\">\n              <div>\n                {orderStatuses.items.map(status => (\n                  <ColoredCheckbox key={status.id} color={status.color_code || '#e0e0e0'}>\n                    <input\n                      type=\"checkbox\"\n                      id={`status-${status.id}`}\n                      checked={filters.order_status_ids?.includes(status.id) || false}\n                      onChange={(e) => {\n                        const currentIds = filters.order_status_ids || [];\n                        if (e.target.checked) {\n                          handleStatusChange([...currentIds, status.id]);\n                        } else {\n                          handleStatusChange(currentIds.filter(id => id !== status.id));\n                        }\n                      }}\n                    />\n                    <label htmlFor={`status-${status.id}`} className=\"checkbox-label\">\n                      {status.name}\n                    </label>\n                  </ColoredCheckbox>\n                ))}\n              </div>\n            </CollapsibleSection>\n          )}\n\n          {paymentStatuses && (\n            <CollapsibleSection title=\"Payment Status\">\n              <div>\n                {paymentStatuses.items.map(status => (\n                  <ColoredCheckbox key={status.id} color={status.color_code || '#e0e0e0'}>\n                    <input\n                      type=\"checkbox\"\n                      id={`payment-${status.id}`}\n                      checked={filters.payment_status_ids?.includes(status.id) || false}\n                      onChange={(e) => {\n                        const currentIds = filters.payment_status_ids || [];\n                        if (e.target.checked) {\n                          handlePaymentStatusChange([...currentIds, status.id]);\n                        } else {\n                          handlePaymentStatusChange(currentIds.filter(id => id !== status.id));\n                        }\n                      }}\n                    />\n                    <label htmlFor={`payment-${status.id}`} className=\"checkbox-label\">\n                      {status.name}\n                    </label>\n                  </ColoredCheckbox>\n                ))}\n              </div>\n            </CollapsibleSection>\n          )}\n\n          {deliveryMethods && (\n            <CollapsibleSection title=\"Delivery Method\">\n              <div>\n                {deliveryMethods.items.map(method => (\n                  <ColoredCheckbox key={method.id} color={method.color_code || '#e0e0e0'}>\n                    <input\n                      type=\"checkbox\"\n                      id={`delivery-${method.id}`}\n                      checked={filters.delivery_method_ids?.includes(method.id) || false}\n                      onChange={(e) => {\n                        const currentIds = filters.delivery_method_ids || [];\n                        if (e.target.checked) {\n                          handleDeliveryMethodChange([...currentIds, method.id]);\n                        } else {\n                          handleDeliveryMethodChange(currentIds.filter(id => id !== method.id));\n                        }\n                      }}\n                    />\n                    <label htmlFor={`delivery-${method.id}`} className=\"checkbox-label\">\n                      {method.name}\n                    </label>\n                  </ColoredCheckbox>\n                ))}\n              </div>\n            </CollapsibleSection>\n          )}\n\n          <CollapsibleSection title=\"Month Range\">\n            <RangeSlider\n              min={1}\n              max={12}\n              value={[\n                filters.month_min ?? 1,\n                filters.month_max ?? 12\n              ]}\n              onChange={handleMonthRangeChange}\n              formatLabel={value => {\n                const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n                return months[value - 1];\n              }}\n            />\n          </CollapsibleSection>\n\n          <CollapsibleSection title=\"Year Range\">\n            <RangeSlider\n              min={currentYear - 5}\n              max={currentYear}\n              value={[\n                filters.year_min ?? currentYear - 5,\n                filters.year_max ?? currentYear\n              ]}\n              onChange={handleYearRangeChange}\n              formatLabel={value => `${value}`}\n            />\n          </CollapsibleSection>\n        </FiltersColumn>\n\n        <MainContentArea>\n          {isLoadingOrders ? (\n            <LoadingSpinner />\n          ) : (\n            <>\n              <OrdersTable \n                orders={ordersData?.items || []} \n                orderStatuses={orderStatuses?.items || []}\n                paymentStatuses={paymentStatuses?.items || []}\n                deliveryMethods={deliveryMethods?.items || []}\n              />\n              \n              {ordersData && (\n                <>\n                  <Pagination\n                    currentPage={page}\n                    totalPages={ordersData.pages}\n                    onPageChange={handlePageChange}\n                  />\n                  <OrdersCount>\n                    Showing {ordersData.items.length} of {ordersData.total} orders\n                  </OrdersCount>\n                </>\n              )}\n            </>\n          )}\n        </MainContentArea>\n      </FiltersContainer>\n    </TabContainer>\n  );\n};\n\nexport default OrdersTab; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}