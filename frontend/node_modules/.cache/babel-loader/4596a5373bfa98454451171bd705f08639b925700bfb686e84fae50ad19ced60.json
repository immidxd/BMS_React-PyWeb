{"ast":null,"code":"import React,{useState}from'react';import styled from'styled-components';import{useQuery}from'@tanstack/react-query';import{fetchOrderFilters}from'../../services/orderService';import FilterSection from'../common/FilterSection';import CollapsibleSection from'../common/CollapsibleSection';import LoadingSpinner from'../common/LoadingSpinner';import{useTheme}from'../../contexts/ThemeContext';import{useSearch}from'../../App';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const FiltersContainer=styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  padding-right: 10px;\n  max-height: 100%;\n  overflow-y: auto;\n`;const FiltersTitle=styled.h3`\n  margin-top: 0;\n  margin-bottom: 15px;\n  font-size: 18px;\n  padding-bottom: 10px;\n  border-bottom: 1px solid #ddd;\n`;const CheckboxContainer=styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  gap: 8px;\n`;const OrderFilters=()=>{const{darkTheme}=useTheme();const{searchTerm}=useSearch();// State for filters\nconst[filters,setFilters]=useState({});// Fetch order filters for filter sections\nconst{data:filterOptions,isLoading:isLoadingFilters}=useQuery({queryKey:['orderFilters'],queryFn:fetchOrderFilters});// Update filters with checkbox selections\nconst handleFilterChange=(filterType,values)=>{setFilters(prev=>({...prev,[filterType]:values.length?values:undefined}));};// Toggle only pending orders filter\nconst handlePendingToggle=checked=>{setFilters(prev=>({...prev,only_pending:checked}));};if(isLoadingFilters){return/*#__PURE__*/_jsx(LoadingSpinner,{});}return/*#__PURE__*/_jsxs(FiltersContainer,{children:[/*#__PURE__*/_jsx(FiltersTitle,{children:\"\\u0424\\u0456\\u043B\\u044C\\u0442\\u0440\\u0438 \\u0437\\u0430\\u043C\\u043E\\u0432\\u043B\\u0435\\u043D\\u044C\"}),filterOptions&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CollapsibleSection,{title:\"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\",children:/*#__PURE__*/_jsx(FilterSection,{title:\"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\\u0438\",items:filterOptions.statuses.map(status=>({id:status,label:status})),selectedItems:filters.statuses||[],onChange:values=>handleFilterChange('statuses',values)})}),/*#__PURE__*/_jsx(CollapsibleSection,{title:\"\\u041A\\u043B\\u0456\\u0454\\u043D\\u0442\",children:/*#__PURE__*/_jsx(FilterSection,{title:\"\\u041A\\u043B\\u0456\\u0454\\u043D\\u0442\\u0438\",items:filterOptions.customers.map(customer=>({id:customer,label:customer})),selectedItems:filters.customers||[],onChange:values=>handleFilterChange('customers',values)})}),/*#__PURE__*/_jsx(CollapsibleSection,{title:\"\\u0421\\u043F\\u043E\\u0441\\u0456\\u0431 \\u0434\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0438\",children:/*#__PURE__*/_jsx(FilterSection,{title:\"\\u0421\\u043F\\u043E\\u0441\\u043E\\u0431\\u0438 \\u0434\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0438\",items:filterOptions.shipping_methods.map(method=>({id:method,label:method})),selectedItems:filters.shipping_methods||[],onChange:values=>handleFilterChange('shipping_methods',values)})}),/*#__PURE__*/_jsx(CollapsibleSection,{title:\"\\u0421\\u043F\\u043E\\u0441\\u0456\\u0431 \\u043E\\u043F\\u043B\\u0430\\u0442\\u0438\",children:/*#__PURE__*/_jsx(FilterSection,{title:\"\\u0421\\u043F\\u043E\\u0441\\u043E\\u0431\\u0438 \\u043E\\u043F\\u043B\\u0430\\u0442\\u0438\",items:filterOptions.payment_methods.map(method=>({id:method,label:method})),selectedItems:filters.payment_methods||[],onChange:values=>handleFilterChange('payment_methods',values)})})]}),/*#__PURE__*/_jsxs(CheckboxContainer,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:\"pending-only\",checked:!!filters.only_pending,onChange:e=>handlePendingToggle(e.target.checked)}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"pending-only\",children:\"\\u0422\\u0456\\u043B\\u044C\\u043A\\u0438 \\u0432 \\u043E\\u0431\\u0440\\u043E\\u0431\\u0446\\u0456\"})]})]});};export default OrderFilters;","map":{"version":3,"names":["React","useState","styled","useQuery","fetchOrderFilters","FilterSection","CollapsibleSection","LoadingSpinner","useTheme","useSearch","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","FiltersContainer","div","FiltersTitle","h3","CheckboxContainer","OrderFilters","darkTheme","searchTerm","filters","setFilters","data","filterOptions","isLoading","isLoadingFilters","queryKey","queryFn","handleFilterChange","filterType","values","prev","length","undefined","handlePendingToggle","checked","only_pending","children","title","items","statuses","map","status","id","label","selectedItems","onChange","customers","customer","shipping_methods","method","payment_methods","type","e","target","htmlFor"],"sources":["/Users/i.malashenko/Desktop/project копія/react-fastapi-app/frontend/src/components/filters/OrderFilters.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useQuery } from '@tanstack/react-query';\nimport { fetchOrderFilters, OrderFilters as OrderFiltersType } from '../../services/orderService';\nimport FilterSection from '../common/FilterSection';\nimport CollapsibleSection from '../common/CollapsibleSection';\nimport LoadingSpinner from '../common/LoadingSpinner';\nimport { useTheme } from '../../contexts/ThemeContext';\nimport { useSearch } from '../../App';\n\nconst FiltersContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  padding-right: 10px;\n  max-height: 100%;\n  overflow-y: auto;\n`;\n\nconst FiltersTitle = styled.h3`\n  margin-top: 0;\n  margin-bottom: 15px;\n  font-size: 18px;\n  padding-bottom: 10px;\n  border-bottom: 1px solid #ddd;\n`;\n\nconst CheckboxContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  gap: 8px;\n`;\n\nconst OrderFilters: React.FC = () => {\n  const { darkTheme } = useTheme();\n  const { searchTerm } = useSearch();\n  \n  // State for filters\n  const [filters, setFilters] = useState<OrderFiltersType>({});\n  \n  // Fetch order filters for filter sections\n  const { data: filterOptions, isLoading: isLoadingFilters } = useQuery({\n    queryKey: ['orderFilters'],\n    queryFn: fetchOrderFilters,\n  });\n\n  // Update filters with checkbox selections\n  const handleFilterChange = (filterType: keyof OrderFiltersType, values: string[]) => {\n    setFilters(prev => ({\n      ...prev,\n      [filterType]: values.length ? values : undefined,\n    }));\n  };\n\n  // Toggle only pending orders filter\n  const handlePendingToggle = (checked: boolean) => {\n    setFilters(prev => ({\n      ...prev,\n      only_pending: checked\n    }));\n  };\n\n  if (isLoadingFilters) {\n    return <LoadingSpinner />;\n  }\n\n  return (\n    <FiltersContainer>\n      <FiltersTitle>Фільтри замовлень</FiltersTitle>\n      \n      {filterOptions && (\n        <>\n          <CollapsibleSection title=\"Статус\">\n            <FilterSection\n              title=\"Статуси\"\n              items={filterOptions.statuses.map(status => ({ id: status, label: status }))}\n              selectedItems={filters.statuses || []}\n              onChange={(values) => handleFilterChange('statuses', values)}\n            />\n          </CollapsibleSection>\n\n          <CollapsibleSection title=\"Клієнт\">\n            <FilterSection\n              title=\"Клієнти\"\n              items={filterOptions.customers.map(customer => ({ id: customer, label: customer }))}\n              selectedItems={filters.customers || []}\n              onChange={(values) => handleFilterChange('customers', values)}\n            />\n          </CollapsibleSection>\n\n          <CollapsibleSection title=\"Спосіб доставки\">\n            <FilterSection\n              title=\"Способи доставки\"\n              items={filterOptions.shipping_methods.map(method => ({ id: method, label: method }))}\n              selectedItems={filters.shipping_methods || []}\n              onChange={(values) => handleFilterChange('shipping_methods', values)}\n            />\n          </CollapsibleSection>\n\n          <CollapsibleSection title=\"Спосіб оплати\">\n            <FilterSection\n              title=\"Способи оплати\"\n              items={filterOptions.payment_methods.map(method => ({ id: method, label: method }))}\n              selectedItems={filters.payment_methods || []}\n              onChange={(values) => handleFilterChange('payment_methods', values)}\n            />\n          </CollapsibleSection>\n        </>\n      )}\n\n      <CheckboxContainer>\n        <input \n          type=\"checkbox\" \n          id=\"pending-only\" \n          checked={!!filters.only_pending} \n          onChange={(e) => handlePendingToggle(e.target.checked)} \n        />\n        <label htmlFor=\"pending-only\">Тільки в обробці</label>\n      </CheckboxContainer>\n    </FiltersContainer>\n  );\n};\n\nexport default OrderFilters; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}