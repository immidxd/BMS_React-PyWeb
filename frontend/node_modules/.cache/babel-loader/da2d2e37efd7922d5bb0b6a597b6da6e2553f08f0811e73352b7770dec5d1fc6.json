{"ast":null,"code":"import React,{useState}from'react';import styled from'styled-components';import{useQuery}from'@tanstack/react-query';import{fetchProductFilters}from'../../services/productService';import FilterSection from'../common/FilterSection';import RangeSlider from'../common/RangeSlider';import CollapsibleSection from'../common/CollapsibleSection';import LoadingSpinner from'../common/LoadingSpinner';import{useTheme}from'../../contexts/ThemeContext';import{useSearch}from'../../App';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const FiltersContainer=styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  padding-right: 10px;\n  max-height: 100%;\n  overflow-y: auto;\n`;const FiltersTitle=styled.h3`\n  margin-top: 0;\n  margin-bottom: 15px;\n  font-size: 18px;\n  padding-bottom: 10px;\n  border-bottom: 1px solid #ddd;\n`;const CheckboxContainer=styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  gap: 8px;\n`;const ProductFilters=()=>{var _filters$price_min,_filters$price_max;const{darkTheme}=useTheme();const{searchTerm}=useSearch();// State for filters\nconst[filters,setFilters]=useState({});// Fetch product filters for filter sections\nconst{data:filterOptions,isLoading:isLoadingFilters}=useQuery({queryKey:['productFilters'],queryFn:fetchProductFilters});// Update filters with checkbox selections\nconst handleFilterChange=(filterType,values)=>{setFilters(prev=>({...prev,[filterType]:values.length?values:undefined}));};// Update range filters\nconst handleRangeChange=(filterType,value)=>{setFilters(prev=>({...prev,[filterType]:value}));};// Toggle only unsold products filter\nconst handleUnsoldToggle=checked=>{setFilters(prev=>({...prev,only_unsold:checked}));};// Toggle only visible products filter\nconst handleVisibleToggle=checked=>{setFilters(prev=>({...prev,visible_only:checked}));};if(isLoadingFilters){return/*#__PURE__*/_jsx(LoadingSpinner,{});}return/*#__PURE__*/_jsxs(FiltersContainer,{children:[/*#__PURE__*/_jsx(FiltersTitle,{children:\"\\u0424\\u0456\\u043B\\u044C\\u0442\\u0440\\u0438 \\u0442\\u043E\\u0432\\u0430\\u0440\\u0456\\u0432\"}),filterOptions&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CollapsibleSection,{title:\"\\u0411\\u0440\\u0435\\u043D\\u0434\",children:/*#__PURE__*/_jsx(FilterSection,{title:\"\\u0411\\u0440\\u0435\\u043D\\u0434\\u0438\",items:filterOptions.brands.map(brand=>({id:brand,label:brand})),selectedItems:filters.brands||[],onChange:values=>handleFilterChange('brands',values)})}),/*#__PURE__*/_jsx(CollapsibleSection,{title:\"\\u0422\\u0438\\u043F\",children:/*#__PURE__*/_jsx(FilterSection,{title:\"\\u0422\\u0438\\u043F\\u0438\",items:filterOptions.types.map(type=>({id:type,label:type})),selectedItems:filters.types||[],onChange:values=>handleFilterChange('types',values)})}),/*#__PURE__*/_jsx(CollapsibleSection,{title:\"\\u041A\\u043E\\u043B\\u0456\\u0440\",children:/*#__PURE__*/_jsx(FilterSection,{title:\"\\u041A\\u043E\\u043B\\u044C\\u043E\\u0440\\u0438\",items:filterOptions.colors.map(color=>({id:color,label:color})),selectedItems:filters.colors||[],onChange:values=>handleFilterChange('colors',values)})}),/*#__PURE__*/_jsx(CollapsibleSection,{title:\"\\u041A\\u0440\\u0430\\u0457\\u043D\\u0430\",children:/*#__PURE__*/_jsx(FilterSection,{title:\"\\u041A\\u0440\\u0430\\u0457\\u043D\\u0438\",items:filterOptions.countries.map(country=>({id:country,label:country})),selectedItems:filters.countries||[],onChange:values=>handleFilterChange('countries',values)})}),/*#__PURE__*/_jsx(CollapsibleSection,{title:\"\\u0414\\u0456\\u0430\\u043F\\u0430\\u0437\\u043E\\u043D \\u0446\\u0456\\u043D\\u0438\",children:/*#__PURE__*/_jsx(RangeSlider,{min:filterOptions.price_range.min,max:filterOptions.price_range.max,defaultMin:(_filters$price_min=filters.price_min)!==null&&_filters$price_min!==void 0?_filters$price_min:filterOptions.price_range.min,defaultMax:(_filters$price_max=filters.price_max)!==null&&_filters$price_max!==void 0?_filters$price_max:filterOptions.price_range.max,onChange:(min,max)=>{handleRangeChange('price_min',min);handleRangeChange('price_max',max);},formatValue:value=>`${value} ₴`})})]}),/*#__PURE__*/_jsxs(CheckboxContainer,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:\"unsold-only\",checked:!!filters.only_unsold,onChange:e=>handleUnsoldToggle(e.target.checked)}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"unsold-only\",children:\"\\u0422\\u0456\\u043B\\u044C\\u043A\\u0438 \\u043D\\u0435\\u043F\\u0440\\u043E\\u0434\\u0430\\u043D\\u0456 \\u0442\\u043E\\u0432\\u0430\\u0440\\u0438\"})]}),/*#__PURE__*/_jsxs(CheckboxContainer,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:\"visible-only\",checked:!!filters.visible_only,onChange:e=>handleVisibleToggle(e.target.checked)}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"visible-only\",children:\"\\u0422\\u0456\\u043B\\u044C\\u043A\\u0438 \\u0432\\u0438\\u0434\\u0438\\u043C\\u0456 \\u0442\\u043E\\u0432\\u0430\\u0440\\u0438\"})]})]});};export default ProductFilters;","map":{"version":3,"names":["React","useState","styled","useQuery","fetchProductFilters","FilterSection","RangeSlider","CollapsibleSection","LoadingSpinner","useTheme","useSearch","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","FiltersContainer","div","FiltersTitle","h3","CheckboxContainer","ProductFilters","_filters$price_min","_filters$price_max","darkTheme","searchTerm","filters","setFilters","data","filterOptions","isLoading","isLoadingFilters","queryKey","queryFn","handleFilterChange","filterType","values","prev","length","undefined","handleRangeChange","value","handleUnsoldToggle","checked","only_unsold","handleVisibleToggle","visible_only","children","title","items","brands","map","brand","id","label","selectedItems","onChange","types","type","colors","color","countries","country","min","price_range","max","defaultMin","price_min","defaultMax","price_max","formatValue","e","target","htmlFor"],"sources":["/Users/i.malashenko/Desktop/project копія/react-fastapi-app/frontend/src/components/filters/ProductFilters.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useQuery } from '@tanstack/react-query';\nimport { fetchProductFilters, ProductFilters as ProductFiltersType } from '../../services/productService';\nimport FilterSection from '../common/FilterSection';\nimport RangeSlider from '../common/RangeSlider';\nimport CollapsibleSection from '../common/CollapsibleSection';\nimport LoadingSpinner from '../common/LoadingSpinner';\nimport { useTheme } from '../../contexts/ThemeContext';\nimport { useSearch } from '../../App';\n\nconst FiltersContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  padding-right: 10px;\n  max-height: 100%;\n  overflow-y: auto;\n`;\n\nconst FiltersTitle = styled.h3`\n  margin-top: 0;\n  margin-bottom: 15px;\n  font-size: 18px;\n  padding-bottom: 10px;\n  border-bottom: 1px solid #ddd;\n`;\n\nconst CheckboxContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  gap: 8px;\n`;\n\nconst ProductFilters: React.FC = () => {\n  const { darkTheme } = useTheme();\n  const { searchTerm } = useSearch();\n  \n  // State for filters\n  const [filters, setFilters] = useState<ProductFiltersType>({});\n  \n  // Fetch product filters for filter sections\n  const { data: filterOptions, isLoading: isLoadingFilters } = useQuery({\n    queryKey: ['productFilters'],\n    queryFn: fetchProductFilters,\n  });\n\n  // Update filters with checkbox selections\n  const handleFilterChange = (filterType: keyof ProductFiltersType, values: string[]) => {\n    setFilters(prev => ({\n      ...prev,\n      [filterType]: values.length ? values : undefined,\n    }));\n  };\n\n  // Update range filters\n  const handleRangeChange = (filterType: 'price_min' | 'price_max' | 'size_min' | 'size_max', value: number | string) => {\n    setFilters(prev => ({\n      ...prev,\n      [filterType]: value,\n    }));\n  };\n\n  // Toggle only unsold products filter\n  const handleUnsoldToggle = (checked: boolean) => {\n    setFilters(prev => ({\n      ...prev,\n      only_unsold: checked\n    }));\n  };\n\n  // Toggle only visible products filter\n  const handleVisibleToggle = (checked: boolean) => {\n    setFilters(prev => ({\n      ...prev,\n      visible_only: checked\n    }));\n  };\n\n  if (isLoadingFilters) {\n    return <LoadingSpinner />;\n  }\n\n  return (\n    <FiltersContainer>\n      <FiltersTitle>Фільтри товарів</FiltersTitle>\n      \n      {filterOptions && (\n        <>\n          <CollapsibleSection title=\"Бренд\">\n            <FilterSection\n              title=\"Бренди\"\n              items={filterOptions.brands.map(brand => ({ id: brand, label: brand }))}\n              selectedItems={filters.brands || []}\n              onChange={(values) => handleFilterChange('brands', values)}\n            />\n          </CollapsibleSection>\n\n          <CollapsibleSection title=\"Тип\">\n            <FilterSection\n              title=\"Типи\"\n              items={filterOptions.types.map(type => ({ id: type, label: type }))}\n              selectedItems={filters.types || []}\n              onChange={(values) => handleFilterChange('types', values)}\n            />\n          </CollapsibleSection>\n\n          <CollapsibleSection title=\"Колір\">\n            <FilterSection\n              title=\"Кольори\"\n              items={filterOptions.colors.map(color => ({ id: color, label: color }))}\n              selectedItems={filters.colors || []}\n              onChange={(values) => handleFilterChange('colors', values)}\n            />\n          </CollapsibleSection>\n\n          <CollapsibleSection title=\"Країна\">\n            <FilterSection\n              title=\"Країни\"\n              items={filterOptions.countries.map(country => ({ id: country, label: country }))}\n              selectedItems={filters.countries || []}\n              onChange={(values) => handleFilterChange('countries', values)}\n            />\n          </CollapsibleSection>\n\n          <CollapsibleSection title=\"Діапазон ціни\">\n            <RangeSlider\n              min={filterOptions.price_range.min}\n              max={filterOptions.price_range.max}\n              defaultMin={filters.price_min ?? filterOptions.price_range.min}\n              defaultMax={filters.price_max ?? filterOptions.price_range.max}\n              onChange={(min, max) => {\n                handleRangeChange('price_min', min);\n                handleRangeChange('price_max', max);\n              }}\n              formatValue={(value: number) => `${value} ₴`}\n            />\n          </CollapsibleSection>\n        </>\n      )}\n\n      <CheckboxContainer>\n        <input \n          type=\"checkbox\" \n          id=\"unsold-only\" \n          checked={!!filters.only_unsold} \n          onChange={(e) => handleUnsoldToggle(e.target.checked)} \n        />\n        <label htmlFor=\"unsold-only\">Тільки непродані товари</label>\n      </CheckboxContainer>\n\n      <CheckboxContainer>\n        <input \n          type=\"checkbox\" \n          id=\"visible-only\" \n          checked={!!filters.visible_only} \n          onChange={(e) => handleVisibleToggle(e.target.checked)} \n        />\n        <label htmlFor=\"visible-only\">Тільки видимі товари</label>\n      </CheckboxContainer>\n    </FiltersContainer>\n  );\n};\n\nexport default ProductFilters; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}