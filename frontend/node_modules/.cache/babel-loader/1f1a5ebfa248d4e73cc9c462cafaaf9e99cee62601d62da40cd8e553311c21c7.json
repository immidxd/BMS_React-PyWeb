{"ast":null,"code":"var _jsxFileName = \"/Users/i.malashenko/Desktop/project \\u043A\\u043E\\u043F\\u0456\\u044F/react-fastapi-app/frontend/src/components/parsing/ParsingDialog.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faPlay, faStop } from '@fortawesome/free-solid-svg-icons';\nimport { useQuery, useMutation } from '@tanstack/react-query';\nimport { toast } from 'react-toastify';\nimport { fetchParsingSources, fetchParsingStyles, startParsing, stopParsing, fetchParsingStatus } from '../../services/parsingService';\nimport { useTheme } from '../../contexts/ThemeContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// Styled components for the dialog\nconst Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n`;\n_c = Overlay;\nconst DialogContainer = styled.div`\n  background-color: ${props => props.isDarkTheme ? 'var(--dark-bg-color)' : 'white'};\n  color: ${props => props.isDarkTheme ? 'var(--dark-text-color)' : 'var(--light-text-color)'};\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n  width: 90%;\n  max-width: 700px;\n  max-height: 90vh;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n_c2 = DialogContainer;\nconst DialogHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1rem;\n  border-bottom: 1px solid var(--light-border-color);\n`;\n_c3 = DialogHeader;\nconst DialogTitle = styled.h2`\n  margin: 0;\n  font-size: 1.5rem;\n`;\n_c4 = DialogTitle;\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  font-size: 1.25rem;\n  cursor: pointer;\n  color: inherit;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n_c5 = CloseButton;\nconst DialogContent = styled.div`\n  padding: 1rem;\n  overflow-y: auto;\n  flex-grow: 1;\n`;\n_c6 = DialogContent;\nconst DialogFooter = styled.div`\n  padding: 1rem;\n  display: flex;\n  justify-content: flex-end;\n  gap: 1rem;\n  border-top: 1px solid var(--light-border-color);\n`;\n_c7 = DialogFooter;\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n_c8 = Form;\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n`;\n_c9 = FormGroup;\nconst Label = styled.label`\n  font-weight: 500;\n`;\n_c10 = Label;\nconst Select = styled.select`\n  padding: 0.5rem;\n  border-radius: 4px;\n  border: 1px solid var(--light-border-color);\n  background-color: ${props => props.isDarkTheme ? '#333' : 'white'};\n  color: ${props => props.isDarkTheme ? 'var(--dark-text-color)' : 'var(--light-text-color)'};\n`;\n_c11 = Select;\nconst Input = styled.input`\n  padding: 0.5rem;\n  border-radius: 4px;\n  border: 1px solid var(--light-border-color);\n  background-color: ${props => props.isDarkTheme ? '#333' : 'white'};\n  color: ${props => props.isDarkTheme ? 'var(--dark-text-color)' : 'var(--light-text-color)'};\n`;\n_c12 = Input;\nconst Button = styled.button`\n  padding: 0.5rem 1rem;\n  border-radius: 4px;\n  border: none;\n  cursor: pointer;\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  background-color: ${props => {\n  if (props.variant === 'danger') return '#d32f2f';\n  if (props.variant === 'secondary') return '#757575';\n  return 'var(--light-accent-color)';\n}};\n  color: white;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${props => {\n  if (props.variant === 'danger') return '#b71c1c';\n  if (props.variant === 'secondary') return '#616161';\n  return 'var(--dark-accent-color)';\n}};\n  }\n\n  &:disabled {\n    background-color: #cccccc;\n    cursor: not-allowed;\n  }\n`;\n_c13 = Button;\nconst ProgressContainer = styled.div`\n  margin-top: 1rem;\n`;\n_c14 = ProgressContainer;\nconst ProgressBar = styled.div`\n  width: 100%;\n  height: 10px;\n  background-color: #e0e0e0;\n  border-radius: 5px;\n  overflow: hidden;\n  margin-bottom: 0.5rem;\n`;\n_c15 = ProgressBar;\nconst ProgressFill = styled.div`\n  height: 100%;\n  background-color: var(--light-accent-color);\n  width: ${props => `${props.progress}%`};\n  transition: width 0.3s ease;\n`;\n_c16 = ProgressFill;\nconst ProgressStats = styled.div`\n  display: flex;\n  justify-content: space-between;\n  font-size: 0.9rem;\n  margin-top: 0.5rem;\n`;\n_c17 = ProgressStats;\nconst StatusText = styled.div`\n  font-weight: 500;\n  color: ${props => {\n  switch (props.status) {\n    case 'completed':\n      return 'green';\n    case 'failed':\n      return 'red';\n    case 'cancelled':\n      return 'orange';\n    default:\n      return 'inherit';\n  }\n}};\n`;\n_c18 = StatusText;\nconst ParsingDialog = ({\n  open,\n  onClose\n}) => {\n  _s();\n  const {\n    darkTheme\n  } = useTheme();\n  const [sourceId, setSourceId] = useState(null);\n  const [styleId, setStyleId] = useState(null);\n  const [requestInterval, setRequestInterval] = useState(1);\n  const [maxItems, setMaxItems] = useState(null);\n  const [activeLogId, setActiveLogId] = useState(null);\n  const [isPolling, setIsPolling] = useState(false);\n\n  // Fetch available parsing sources and styles\n  const {\n    data: sources = []\n  } = useQuery({\n    queryKey: ['parsingSources'],\n    queryFn: fetchParsingSources\n  });\n  const {\n    data: styles = []\n  } = useQuery({\n    queryKey: ['parsingStyles'],\n    queryFn: fetchParsingStyles\n  });\n\n  // Start parsing mutation\n  const startParsingMutation = useMutation({\n    mutationFn: startParsing,\n    onSuccess: data => {\n      setActiveLogId(data.log_id);\n      setIsPolling(true);\n      toast.success(\"Parsing started successfully\");\n    },\n    onError: error => {\n      toast.error(`Failed to start parsing: ${error.message}`);\n    }\n  });\n\n  // Stop parsing mutation\n  const stopParsingMutation = useMutation({\n    mutationFn: stopParsing,\n    onSuccess: () => {\n      setIsPolling(false);\n      toast.info(\"Parsing stopped\");\n    },\n    onError: error => {\n      toast.error(`Failed to stop parsing: ${error.message}`);\n    }\n  });\n\n  // Fetch parsing status\n  const {\n    data: parsingStatus,\n    refetch: refetchStatus\n  } = useQuery({\n    queryKey: ['parsingStatus', activeLogId],\n    queryFn: () => fetchParsingStatus(activeLogId),\n    enabled: !!activeLogId && isPolling,\n    refetchInterval: isPolling ? 1000 : false,\n    onSuccess: data => {\n      if (data.status === 'completed' || data.status === 'failed' || data.status === 'cancelled') {\n        setIsPolling(false);\n        if (data.status === 'completed') {\n          toast.success(`Parsing completed: ${data.items_processed} items processed`);\n        } else if (data.status === 'failed') {\n          toast.error(`Parsing failed: ${data.message}`);\n        }\n      }\n    }\n  });\n\n  // Handle form submission\n  const handleStartParsing = e => {\n    e.preventDefault();\n    if (!sourceId || !styleId) {\n      toast.warning(\"Please select both source and style\");\n      return;\n    }\n    startParsingMutation.mutate({\n      source_id: sourceId,\n      style_id: styleId,\n      request_interval: requestInterval,\n      max_items: maxItems || undefined\n    });\n  };\n\n  // Handle stop parsing\n  const handleStopParsing = () => {\n    if (activeLogId) {\n      stopParsingMutation.mutate(activeLogId);\n    }\n  };\n\n  // Clean up polling when dialog closes\n  useEffect(() => {\n    if (!open) {\n      setIsPolling(false);\n    }\n  }, [open]);\n\n  // Check polling status and set up interval\n  useEffect(() => {\n    let interval;\n    if (isPolling && activeLogId) {\n      interval = setInterval(() => {\n        refetchStatus();\n      }, 1000);\n    }\n    return () => {\n      if (interval) clearInterval(interval);\n    };\n  }, [isPolling, activeLogId, refetchStatus]);\n  if (!open) return null;\n  const isFormDisabled = startParsingMutation.isLoading || isPolling;\n  const showProgress = isPolling || parsingStatus && parsingStatus.status !== 'unknown';\n\n  // Calculate progress percentage\n  const progress = parsingStatus ? parsingStatus.progress || (parsingStatus.total_items && parsingStatus.current_item ? Math.round(parsingStatus.current_item / parsingStatus.total_items * 100) : 0) : 0;\n  return /*#__PURE__*/_jsxDEV(Overlay, {\n    onClick: e => e.target === e.currentTarget && onClose(),\n    children: /*#__PURE__*/_jsxDEV(DialogContainer, {\n      isDarkTheme: darkTheme,\n      children: [/*#__PURE__*/_jsxDEV(DialogHeader, {\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Data Parsing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CloseButton, {\n          onClick: onClose,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleStartParsing,\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"source\",\n              children: \"Source\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              id: \"source\",\n              value: sourceId || '',\n              onChange: e => setSourceId(e.target.value ? parseInt(e.target.value) : null),\n              disabled: isFormDisabled,\n              isDarkTheme: darkTheme,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a source\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 17\n              }, this), sources.map(source => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: source.id,\n                children: source.name\n              }, source.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"style\",\n              children: \"Parsing Style\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              id: \"style\",\n              value: styleId || '',\n              onChange: e => setStyleId(e.target.value ? parseInt(e.target.value) : null),\n              disabled: isFormDisabled,\n              isDarkTheme: darkTheme,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a style\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 17\n              }, this), styles.map(style => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: style.id,\n                children: [style.name, \" - \", style.description]\n              }, style.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"interval\",\n              children: \"Request Interval (seconds)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"interval\",\n              type: \"number\",\n              min: \"0.1\",\n              step: \"0.1\",\n              value: requestInterval,\n              onChange: e => setRequestInterval(parseFloat(e.target.value)),\n              disabled: isFormDisabled,\n              isDarkTheme: darkTheme\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"maxItems\",\n              children: \"Max Items (optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"maxItems\",\n              type: \"number\",\n              min: \"1\",\n              value: maxItems || '',\n              onChange: e => setMaxItems(e.target.value ? parseInt(e.target.value) : null),\n              disabled: isFormDisabled,\n              isDarkTheme: darkTheme\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), showProgress && /*#__PURE__*/_jsxDEV(ProgressContainer, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Parsing Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n            children: /*#__PURE__*/_jsxDEV(ProgressFill, {\n              progress: progress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StatusText, {\n            status: (parsingStatus === null || parsingStatus === void 0 ? void 0 : parsingStatus.status) || 'in_progress',\n            children: [\"Status: \", (parsingStatus === null || parsingStatus === void 0 ? void 0 : parsingStatus.status) || 'In progress']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this), parsingStatus && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: parsingStatus.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 19\n            }, this), parsingStatus.items_processed > 0 && /*#__PURE__*/_jsxDEV(ProgressStats, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Processed: \", parsingStatus.items_processed]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Added: \", parsingStatus.items_added]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Updated: \", parsingStatus.items_updated]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Failed: \", parsingStatus.items_failed]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogFooter, {\n        children: [isPolling ? /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          onClick: handleStopParsing,\n          variant: \"danger\",\n          disabled: stopParsingMutation.isLoading,\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faStop\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 15\n          }, this), \"Stop Parsing\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          onClick: handleStartParsing,\n          disabled: isFormDisabled || !sourceId || !styleId,\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPlay\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 15\n          }, this), \"Start Parsing\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          onClick: onClose,\n          variant: \"secondary\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 303,\n    columnNumber: 5\n  }, this);\n};\n_s(ParsingDialog, \"mhenBerh0OBFUI+UUL4eakZfCmY=\", false, function () {\n  return [useTheme, useQuery, useQuery, useMutation, useMutation, useQuery];\n});\n_c19 = ParsingDialog;\nexport default ParsingDialog;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19;\n$RefreshReg$(_c, \"Overlay\");\n$RefreshReg$(_c2, \"DialogContainer\");\n$RefreshReg$(_c3, \"DialogHeader\");\n$RefreshReg$(_c4, \"DialogTitle\");\n$RefreshReg$(_c5, \"CloseButton\");\n$RefreshReg$(_c6, \"DialogContent\");\n$RefreshReg$(_c7, \"DialogFooter\");\n$RefreshReg$(_c8, \"Form\");\n$RefreshReg$(_c9, \"FormGroup\");\n$RefreshReg$(_c10, \"Label\");\n$RefreshReg$(_c11, \"Select\");\n$RefreshReg$(_c12, \"Input\");\n$RefreshReg$(_c13, \"Button\");\n$RefreshReg$(_c14, \"ProgressContainer\");\n$RefreshReg$(_c15, \"ProgressBar\");\n$RefreshReg$(_c16, \"ProgressFill\");\n$RefreshReg$(_c17, \"ProgressStats\");\n$RefreshReg$(_c18, \"StatusText\");\n$RefreshReg$(_c19, \"ParsingDialog\");","map":{"version":3,"names":["React","useState","useEffect","styled","FontAwesomeIcon","faTimes","faPlay","faStop","useQuery","useMutation","toast","fetchParsingSources","fetchParsingStyles","startParsing","stopParsing","fetchParsingStatus","useTheme","jsxDEV","_jsxDEV","Fragment","_Fragment","Overlay","div","_c","DialogContainer","props","isDarkTheme","_c2","DialogHeader","_c3","DialogTitle","h2","_c4","CloseButton","button","_c5","DialogContent","_c6","DialogFooter","_c7","Form","form","_c8","FormGroup","_c9","Label","label","_c10","Select","select","_c11","Input","input","_c12","Button","variant","_c13","ProgressContainer","_c14","ProgressBar","_c15","ProgressFill","progress","_c16","ProgressStats","_c17","StatusText","status","_c18","ParsingDialog","open","onClose","_s","darkTheme","sourceId","setSourceId","styleId","setStyleId","requestInterval","setRequestInterval","maxItems","setMaxItems","activeLogId","setActiveLogId","isPolling","setIsPolling","data","sources","queryKey","queryFn","styles","startParsingMutation","mutationFn","onSuccess","log_id","success","onError","error","message","stopParsingMutation","info","parsingStatus","refetch","refetchStatus","enabled","refetchInterval","items_processed","handleStartParsing","e","preventDefault","warning","mutate","source_id","style_id","request_interval","max_items","undefined","handleStopParsing","interval","setInterval","clearInterval","isFormDisabled","isLoading","showProgress","total_items","current_item","Math","round","onClick","target","currentTarget","children","fileName","_jsxFileName","lineNumber","columnNumber","icon","onSubmit","htmlFor","id","value","onChange","parseInt","disabled","map","source","name","style","description","type","min","step","parseFloat","items_added","items_updated","items_failed","_c19","$RefreshReg$"],"sources":["/Users/i.malashenko/Desktop/project копія/react-fastapi-app/frontend/src/components/parsing/ParsingDialog.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faPlay, faStop } from '@fortawesome/free-solid-svg-icons';\nimport { useQuery, useMutation } from '@tanstack/react-query';\nimport { toast } from 'react-toastify';\n\nimport { fetchParsingSources, fetchParsingStyles, startParsing, stopParsing, fetchParsingStatus } from '../../services/parsingService';\nimport { useTheme } from '../../contexts/ThemeContext';\n\ninterface ParsingDialogProps {\n  open: boolean;\n  onClose: () => void;\n}\n\n// Styled components for the dialog\nconst Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n`;\n\nconst DialogContainer = styled.div<{ isDarkTheme: boolean }>`\n  background-color: ${props => props.isDarkTheme ? 'var(--dark-bg-color)' : 'white'};\n  color: ${props => props.isDarkTheme ? 'var(--dark-text-color)' : 'var(--light-text-color)'};\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n  width: 90%;\n  max-width: 700px;\n  max-height: 90vh;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n\nconst DialogHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1rem;\n  border-bottom: 1px solid var(--light-border-color);\n`;\n\nconst DialogTitle = styled.h2`\n  margin: 0;\n  font-size: 1.5rem;\n`;\n\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  font-size: 1.25rem;\n  cursor: pointer;\n  color: inherit;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst DialogContent = styled.div`\n  padding: 1rem;\n  overflow-y: auto;\n  flex-grow: 1;\n`;\n\nconst DialogFooter = styled.div`\n  padding: 1rem;\n  display: flex;\n  justify-content: flex-end;\n  gap: 1rem;\n  border-top: 1px solid var(--light-border-color);\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n`;\n\nconst Label = styled.label`\n  font-weight: 500;\n`;\n\nconst Select = styled.select<{ isDarkTheme: boolean }>`\n  padding: 0.5rem;\n  border-radius: 4px;\n  border: 1px solid var(--light-border-color);\n  background-color: ${props => props.isDarkTheme ? '#333' : 'white'};\n  color: ${props => props.isDarkTheme ? 'var(--dark-text-color)' : 'var(--light-text-color)'};\n`;\n\nconst Input = styled.input<{ isDarkTheme: boolean }>`\n  padding: 0.5rem;\n  border-radius: 4px;\n  border: 1px solid var(--light-border-color);\n  background-color: ${props => props.isDarkTheme ? '#333' : 'white'};\n  color: ${props => props.isDarkTheme ? 'var(--dark-text-color)' : 'var(--light-text-color)'};\n`;\n\nconst Button = styled.button<{ variant?: 'primary' | 'secondary' | 'danger' }>`\n  padding: 0.5rem 1rem;\n  border-radius: 4px;\n  border: none;\n  cursor: pointer;\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  background-color: ${props => {\n    if (props.variant === 'danger') return '#d32f2f';\n    if (props.variant === 'secondary') return '#757575';\n    return 'var(--light-accent-color)';\n  }};\n  color: white;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${props => {\n      if (props.variant === 'danger') return '#b71c1c';\n      if (props.variant === 'secondary') return '#616161';\n      return 'var(--dark-accent-color)';\n    }};\n  }\n\n  &:disabled {\n    background-color: #cccccc;\n    cursor: not-allowed;\n  }\n`;\n\nconst ProgressContainer = styled.div`\n  margin-top: 1rem;\n`;\n\nconst ProgressBar = styled.div`\n  width: 100%;\n  height: 10px;\n  background-color: #e0e0e0;\n  border-radius: 5px;\n  overflow: hidden;\n  margin-bottom: 0.5rem;\n`;\n\nconst ProgressFill = styled.div<{ progress: number }>`\n  height: 100%;\n  background-color: var(--light-accent-color);\n  width: ${props => `${props.progress}%`};\n  transition: width 0.3s ease;\n`;\n\nconst ProgressStats = styled.div`\n  display: flex;\n  justify-content: space-between;\n  font-size: 0.9rem;\n  margin-top: 0.5rem;\n`;\n\nconst StatusText = styled.div<{ status: string }>`\n  font-weight: 500;\n  color: ${props => {\n    switch (props.status) {\n      case 'completed': return 'green';\n      case 'failed': return 'red';\n      case 'cancelled': return 'orange';\n      default: return 'inherit';\n    }\n  }};\n`;\n\nconst ParsingDialog: React.FC<ParsingDialogProps> = ({ open, onClose }) => {\n  const { darkTheme } = useTheme();\n  const [sourceId, setSourceId] = useState<number | null>(null);\n  const [styleId, setStyleId] = useState<number | null>(null);\n  const [requestInterval, setRequestInterval] = useState<number>(1);\n  const [maxItems, setMaxItems] = useState<number | null>(null);\n  const [activeLogId, setActiveLogId] = useState<number | null>(null);\n  const [isPolling, setIsPolling] = useState<boolean>(false);\n\n  // Fetch available parsing sources and styles\n  const { data: sources = [] } = useQuery({\n    queryKey: ['parsingSources'],\n    queryFn: fetchParsingSources,\n  });\n\n  const { data: styles = [] } = useQuery({\n    queryKey: ['parsingStyles'],\n    queryFn: fetchParsingStyles,\n  });\n\n  // Start parsing mutation\n  const startParsingMutation = useMutation({\n    mutationFn: startParsing,\n    onSuccess: (data) => {\n      setActiveLogId(data.log_id);\n      setIsPolling(true);\n      toast.success(\"Parsing started successfully\");\n    },\n    onError: (error: any) => {\n      toast.error(`Failed to start parsing: ${error.message}`);\n    }\n  });\n\n  // Stop parsing mutation\n  const stopParsingMutation = useMutation({\n    mutationFn: stopParsing,\n    onSuccess: () => {\n      setIsPolling(false);\n      toast.info(\"Parsing stopped\");\n    },\n    onError: (error: any) => {\n      toast.error(`Failed to stop parsing: ${error.message}`);\n    }\n  });\n\n  // Fetch parsing status\n  const { data: parsingStatus, refetch: refetchStatus } = useQuery({\n    queryKey: ['parsingStatus', activeLogId],\n    queryFn: () => fetchParsingStatus(activeLogId!),\n    enabled: !!activeLogId && isPolling,\n    refetchInterval: isPolling ? 1000 : false,\n    onSuccess: (data) => {\n      if (data.status === 'completed' || data.status === 'failed' || data.status === 'cancelled') {\n        setIsPolling(false);\n        if (data.status === 'completed') {\n          toast.success(`Parsing completed: ${data.items_processed} items processed`);\n        } else if (data.status === 'failed') {\n          toast.error(`Parsing failed: ${data.message}`);\n        }\n      }\n    }\n  });\n\n  // Handle form submission\n  const handleStartParsing = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!sourceId || !styleId) {\n      toast.warning(\"Please select both source and style\");\n      return;\n    }\n\n    startParsingMutation.mutate({\n      source_id: sourceId,\n      style_id: styleId,\n      request_interval: requestInterval,\n      max_items: maxItems || undefined\n    });\n  };\n\n  // Handle stop parsing\n  const handleStopParsing = () => {\n    if (activeLogId) {\n      stopParsingMutation.mutate(activeLogId);\n    }\n  };\n\n  // Clean up polling when dialog closes\n  useEffect(() => {\n    if (!open) {\n      setIsPolling(false);\n    }\n  }, [open]);\n\n  // Check polling status and set up interval\n  useEffect(() => {\n    let interval: NodeJS.Timeout;\n    \n    if (isPolling && activeLogId) {\n      interval = setInterval(() => {\n        refetchStatus();\n      }, 1000);\n    }\n    \n    return () => {\n      if (interval) clearInterval(interval);\n    };\n  }, [isPolling, activeLogId, refetchStatus]);\n\n  if (!open) return null;\n\n  const isFormDisabled = startParsingMutation.isLoading || isPolling;\n  const showProgress = isPolling || (parsingStatus && parsingStatus.status !== 'unknown');\n  \n  // Calculate progress percentage\n  const progress = parsingStatus ? \n    parsingStatus.progress || \n    (parsingStatus.total_items && parsingStatus.current_item ? \n      Math.round((parsingStatus.current_item / parsingStatus.total_items) * 100) : 0) : 0;\n\n  return (\n    <Overlay onClick={e => e.target === e.currentTarget && onClose()}>\n      <DialogContainer isDarkTheme={darkTheme}>\n        <DialogHeader>\n          <DialogTitle>Data Parsing</DialogTitle>\n          <CloseButton onClick={onClose}>\n            <FontAwesomeIcon icon={faTimes} />\n          </CloseButton>\n        </DialogHeader>\n        <DialogContent>\n          <Form onSubmit={handleStartParsing}>\n            <FormGroup>\n              <Label htmlFor=\"source\">Source</Label>\n              <Select \n                id=\"source\" \n                value={sourceId || ''} \n                onChange={e => setSourceId(e.target.value ? parseInt(e.target.value) : null)}\n                disabled={isFormDisabled}\n                isDarkTheme={darkTheme}\n              >\n                <option value=\"\">Select a source</option>\n                {sources.map(source => (\n                  <option key={source.id} value={source.id}>\n                    {source.name}\n                  </option>\n                ))}\n              </Select>\n            </FormGroup>\n            \n            <FormGroup>\n              <Label htmlFor=\"style\">Parsing Style</Label>\n              <Select \n                id=\"style\" \n                value={styleId || ''} \n                onChange={e => setStyleId(e.target.value ? parseInt(e.target.value) : null)}\n                disabled={isFormDisabled}\n                isDarkTheme={darkTheme}\n              >\n                <option value=\"\">Select a style</option>\n                {styles.map(style => (\n                  <option key={style.id} value={style.id}>\n                    {style.name} - {style.description}\n                  </option>\n                ))}\n              </Select>\n            </FormGroup>\n            \n            <FormGroup>\n              <Label htmlFor=\"interval\">Request Interval (seconds)</Label>\n              <Input \n                id=\"interval\" \n                type=\"number\" \n                min=\"0.1\" \n                step=\"0.1\" \n                value={requestInterval} \n                onChange={e => setRequestInterval(parseFloat(e.target.value))}\n                disabled={isFormDisabled}\n                isDarkTheme={darkTheme}\n              />\n            </FormGroup>\n            \n            <FormGroup>\n              <Label htmlFor=\"maxItems\">Max Items (optional)</Label>\n              <Input \n                id=\"maxItems\" \n                type=\"number\" \n                min=\"1\" \n                value={maxItems || ''} \n                onChange={e => setMaxItems(e.target.value ? parseInt(e.target.value) : null)}\n                disabled={isFormDisabled}\n                isDarkTheme={darkTheme}\n              />\n            </FormGroup>\n          </Form>\n          \n          {showProgress && (\n            <ProgressContainer>\n              <h3>Parsing Progress</h3>\n              <ProgressBar>\n                <ProgressFill progress={progress} />\n              </ProgressBar>\n              \n              <StatusText status={parsingStatus?.status || 'in_progress'}>\n                Status: {parsingStatus?.status || 'In progress'}\n              </StatusText>\n              \n              {parsingStatus && (\n                <>\n                  <div>{parsingStatus.message}</div>\n                  \n                  {parsingStatus.items_processed > 0 && (\n                    <ProgressStats>\n                      <div>Processed: {parsingStatus.items_processed}</div>\n                      <div>Added: {parsingStatus.items_added}</div>\n                      <div>Updated: {parsingStatus.items_updated}</div>\n                      <div>Failed: {parsingStatus.items_failed}</div>\n                    </ProgressStats>\n                  )}\n                </>\n              )}\n            </ProgressContainer>\n          )}\n        </DialogContent>\n        <DialogFooter>\n          {isPolling ? (\n            <Button \n              type=\"button\" \n              onClick={handleStopParsing} \n              variant=\"danger\"\n              disabled={stopParsingMutation.isLoading}\n            >\n              <FontAwesomeIcon icon={faStop} />\n              Stop Parsing\n            </Button>\n          ) : (\n            <Button \n              type=\"button\" \n              onClick={handleStartParsing} \n              disabled={isFormDisabled || !sourceId || !styleId}\n            >\n              <FontAwesomeIcon icon={faPlay} />\n              Start Parsing\n            </Button>\n          )}\n          <Button \n            type=\"button\" \n            onClick={onClose} \n            variant=\"secondary\"\n          >\n            Close\n          </Button>\n        </DialogFooter>\n      </DialogContainer>\n    </Overlay>\n  );\n};\n\nexport default ParsingDialog; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}