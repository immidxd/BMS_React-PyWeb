{"ast":null,"code":"import axios from'axios';// Define types for API responses\n// API functions\nexport const fetchParsingSources=async()=>{const response=await axios.get('/api/parsing/sources');return response.data;};export const fetchParsingStyles=async()=>{const response=await axios.get('/api/parsing/styles');return response.data;};export const startParsing=async request=>{const response=await axios.post('/api/parsing/start',request);return response.data;};export const stopParsing=async logId=>{const response=await axios.post(`/api/parsing/stop/${logId}`);return response.data;};export const fetchParsingStatus=async logId=>{const response=await axios.get(`/api/parsing/status/${logId}`);return response.data;};export const fetchParsingLogs=async function(){let limit=arguments.length>0&&arguments[0]!==undefined?arguments[0]:50;const response=await axios.get(`/api/parsing/logs?limit=${limit}`);return response.data;};","map":{"version":3,"names":["axios","fetchParsingSources","response","get","data","fetchParsingStyles","startParsing","request","post","stopParsing","logId","fetchParsingStatus","fetchParsingLogs","limit","arguments","length","undefined"],"sources":["/Users/i.malashenko/Desktop/project копія/react-fastapi-app/frontend/src/services/parsingService.ts"],"sourcesContent":["import axios from 'axios';\n\n// Define types for API responses\nexport interface ParsingSource {\n  id: number;\n  name: string;\n  url: string;\n  description: string | null;\n  enabled: boolean;\n}\n\nexport interface ParsingStyle {\n  id: number;\n  name: string;\n  description: string | null;\n  include_images: boolean;\n  deep_details: boolean;\n}\n\nexport interface ParsingLog {\n  id: number;\n  source_id: number;\n  start_time: string;\n  end_time: string | null;\n  items_processed: number;\n  items_added: number;\n  items_updated: number;\n  items_failed: number;\n  status: 'in_progress' | 'completed' | 'failed' | 'cancelled';\n  message: string | null;\n  source: ParsingSource;\n}\n\nexport interface ParsingStatus {\n  log_id: number;\n  status: 'in_progress' | 'completed' | 'failed' | 'cancelled' | 'unknown';\n  items_processed: number;\n  items_added: number;\n  items_updated: number;\n  items_failed: number;\n  progress: number;\n  total_items?: number;\n  current_item?: number;\n  message: string | null;\n  start_time: string;\n  end_time: string | null;\n  details?: any;\n}\n\nexport interface ParsingRequest {\n  source_id: number;\n  style_id: number;\n  categories?: string[];\n  request_interval?: number;\n  max_items?: number;\n  custom_options?: Record<string, any>;\n}\n\n// API functions\nexport const fetchParsingSources = async (): Promise<ParsingSource[]> => {\n  const response = await axios.get('/api/parsing/sources');\n  return response.data;\n};\n\nexport const fetchParsingStyles = async (): Promise<ParsingStyle[]> => {\n  const response = await axios.get('/api/parsing/styles');\n  return response.data;\n};\n\nexport const startParsing = async (request: ParsingRequest): Promise<{ log_id: number; status: string; message: string }> => {\n  const response = await axios.post('/api/parsing/start', request);\n  return response.data;\n};\n\nexport const stopParsing = async (logId: number): Promise<{ log_id: number; status: string; message: string }> => {\n  const response = await axios.post(`/api/parsing/stop/${logId}`);\n  return response.data;\n};\n\nexport const fetchParsingStatus = async (logId: number): Promise<ParsingStatus> => {\n  const response = await axios.get(`/api/parsing/status/${logId}`);\n  return response.data;\n};\n\nexport const fetchParsingLogs = async (limit: number = 50): Promise<ParsingLog[]> => {\n  const response = await axios.get(`/api/parsing/logs?limit=${limit}`);\n  return response.data;\n}; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AAwDA;AACA,MAAO,MAAM,CAAAC,mBAAmB,CAAG,KAAAA,CAAA,GAAsC,CACvE,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAF,KAAK,CAACG,GAAG,CAAC,sBAAsB,CAAC,CACxD,MAAO,CAAAD,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED,MAAO,MAAM,CAAAC,kBAAkB,CAAG,KAAAA,CAAA,GAAqC,CACrE,KAAM,CAAAH,QAAQ,CAAG,KAAM,CAAAF,KAAK,CAACG,GAAG,CAAC,qBAAqB,CAAC,CACvD,MAAO,CAAAD,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED,MAAO,MAAM,CAAAE,YAAY,CAAG,KAAO,CAAAC,OAAuB,EAAmE,CAC3H,KAAM,CAAAL,QAAQ,CAAG,KAAM,CAAAF,KAAK,CAACQ,IAAI,CAAC,oBAAoB,CAAED,OAAO,CAAC,CAChE,MAAO,CAAAL,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED,MAAO,MAAM,CAAAK,WAAW,CAAG,KAAO,CAAAC,KAAa,EAAmE,CAChH,KAAM,CAAAR,QAAQ,CAAG,KAAM,CAAAF,KAAK,CAACQ,IAAI,CAAC,qBAAqBE,KAAK,EAAE,CAAC,CAC/D,MAAO,CAAAR,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED,MAAO,MAAM,CAAAO,kBAAkB,CAAG,KAAO,CAAAD,KAAa,EAA6B,CACjF,KAAM,CAAAR,QAAQ,CAAG,KAAM,CAAAF,KAAK,CAACG,GAAG,CAAC,uBAAuBO,KAAK,EAAE,CAAC,CAChE,MAAO,CAAAR,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED,MAAO,MAAM,CAAAQ,gBAAgB,CAAG,cAAAA,CAAA,CAAqD,IAA9C,CAAAC,KAAa,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,CACvD,KAAM,CAAAZ,QAAQ,CAAG,KAAM,CAAAF,KAAK,CAACG,GAAG,CAAC,2BAA2BU,KAAK,EAAE,CAAC,CACpE,MAAO,CAAAX,QAAQ,CAACE,IAAI,CACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}