{"ast":null,"code":"import React,{createContext,useState,useContext,useEffect,useMemo,useCallback}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const ThemeContext=/*#__PURE__*/createContext(undefined);// Renamed to AppThemeProvider to avoid conflict with styled-components' ThemeProvider\nexport const AppThemeProvider=_ref=>{let{children}=_ref;const[theme,setTheme]=useState(()=>{const storedTheme=localStorage.getItem('app-theme');// const prefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\nreturn storedTheme||'light';});useEffect(()=>{localStorage.setItem('app-theme',theme);if(theme==='dark'){document.documentElement.classList.add('dark');}else{document.documentElement.classList.remove('dark');}},[theme]);const toggleTheme=useCallback(()=>{setTheme(prevTheme=>prevTheme==='light'?'dark':'light');},[]);// No dependencies needed for setTheme with a callback\nconst value=useMemo(()=>({theme,toggleTheme}),[theme,toggleTheme]);return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:value,children:children});};export const useTheme=()=>{const context=useContext(ThemeContext);if(context===undefined){throw new Error('useTheme must be used within a ThemeProvider');}return context;};","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","useMemo","useCallback","jsx","_jsx","ThemeContext","undefined","AppThemeProvider","_ref","children","theme","setTheme","storedTheme","localStorage","getItem","setItem","document","documentElement","classList","add","remove","toggleTheme","prevTheme","value","Provider","useTheme","context","Error"],"sources":["/Users/i.malashenko/Desktop/react-fastapi-app/frontend/src/contexts/ThemeContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect, useMemo, useCallback } from 'react';\n\ntype Theme = 'light' | 'dark';\n\ninterface ThemeContextType {\n  theme: Theme;\n  toggleTheme: () => void;\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\n// Renamed to AppThemeProvider to avoid conflict with styled-components' ThemeProvider\nexport const AppThemeProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [theme, setTheme] = useState<Theme>(() => {\n    const storedTheme = localStorage.getItem('app-theme') as Theme | null;\n    // const prefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n    return storedTheme || 'light';\n  });\n\n  useEffect(() => {\n    localStorage.setItem('app-theme', theme);\n    if (theme === 'dark') {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n  }, [theme]);\n\n  const toggleTheme = useCallback(() => {\n    setTheme(prevTheme => (prevTheme === 'light' ? 'dark' : 'light'));\n  }, []); // No dependencies needed for setTheme with a callback\n\n  const value = useMemo(() => ({ theme, toggleTheme }), [theme, toggleTheme]);\n\n  return (\n    <ThemeContext.Provider value={value}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = (): ThemeContextType => {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n}; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,UAAU,CAAEC,SAAS,CAAEC,OAAO,CAAEC,WAAW,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBASpG,KAAM,CAAAC,YAAY,cAAGR,aAAa,CAA+BS,SAAS,CAAC,CAE3E;AACA,MAAO,MAAM,CAAAC,gBAAyD,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACpF,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGb,QAAQ,CAAQ,IAAM,CAC9C,KAAM,CAAAc,WAAW,CAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAiB,CACrE;AACA,MAAO,CAAAF,WAAW,EAAI,OAAO,CAC/B,CAAC,CAAC,CAEFZ,SAAS,CAAC,IAAM,CACda,YAAY,CAACE,OAAO,CAAC,WAAW,CAAEL,KAAK,CAAC,CACxC,GAAIA,KAAK,GAAK,MAAM,CAAE,CACpBM,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC,CAChD,CAAC,IAAM,CACLH,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC,CACnD,CACF,CAAC,CAAE,CAACV,KAAK,CAAC,CAAC,CAEX,KAAM,CAAAW,WAAW,CAAGnB,WAAW,CAAC,IAAM,CACpCS,QAAQ,CAACW,SAAS,EAAKA,SAAS,GAAK,OAAO,CAAG,MAAM,CAAG,OAAQ,CAAC,CACnE,CAAC,CAAE,EAAE,CAAC,CAAE;AAER,KAAM,CAAAC,KAAK,CAAGtB,OAAO,CAAC,KAAO,CAAES,KAAK,CAAEW,WAAY,CAAC,CAAC,CAAE,CAACX,KAAK,CAAEW,WAAW,CAAC,CAAC,CAE3E,mBACEjB,IAAA,CAACC,YAAY,CAACmB,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAAd,QAAA,CACjCA,QAAQ,CACY,CAAC,CAE5B,CAAC,CAED,MAAO,MAAM,CAAAgB,QAAQ,CAAGA,CAAA,GAAwB,CAC9C,KAAM,CAAAC,OAAO,CAAG3B,UAAU,CAACM,YAAY,CAAC,CACxC,GAAIqB,OAAO,GAAKpB,SAAS,CAAE,CACzB,KAAM,IAAI,CAAAqB,KAAK,CAAC,8CAA8C,CAAC,CACjE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}