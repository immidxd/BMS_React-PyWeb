{"version":3,"file":"static/js/826.9ee0d5d1.chunk.js","mappings":"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","sources":["components/common/RefreshButton.tsx","components/common/FilterPanel.tsx","layouts/MainLayout.tsx","pages/ProductsPage.tsx"],"sourcesContent":["import React from 'react';\n\ninterface RefreshButtonProps {\n  onClick: () => void;\n  isLoading?: boolean;\n  label?: string;\n}\n\nconst RefreshButton: React.FC<RefreshButtonProps> = ({\n  onClick,\n  isLoading = false,\n  label = \"Оновити дані\"\n}) => {\n  return (\n    <button\n      onClick={onClick}\n      disabled={isLoading}\n      aria-label={label}\n      className={`p-2 rounded-full flex items-center justify-center \n                 bg-blue-500 hover:bg-blue-600 dark:bg-blue-600 dark:hover:bg-blue-700 \n                 text-white transition-all duration-150 ease-in-out \n                 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 dark:focus:ring-offset-gray-800\n                 disabled:opacity-50 disabled:cursor-not-allowed \n                 transform hover:scale-105 active:scale-95`}\n    >\n      {isLoading ? (\n        <svg className=\"animate-spin h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n          <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n          <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n        </svg>\n      ) : (\n        // Refresh Icon SVG (Unicode U+1F504 might not render consistently, so SVG is better)\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fillRule=\"evenodd\" d=\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z\" clipRule=\"evenodd\" />\n        </svg>\n      )}\n      {/* {label && !isLoading && <span className=\"ml-2\">{label}</span>} */}\n    </button>\n  );\n};\n\nexport default RefreshButton; ","import React from 'react';\n// Removed unused context import to potentially resolve linter issue\n// import { useFilterPanel } from '../contexts/FilterPanelContext'; \n\ninterface FilterPanelProps {\n  isOpen: boolean;\n  onClose: () => void; // Keep onClose prop as MainLayout passes context close function\n  onResetFilters: () => void;\n  children: React.ReactNode; // Specific filters will be passed as children\n  title?: string;\n}\n\nconst FilterPanel: React.FC<FilterPanelProps> = ({\n  isOpen,\n  onClose, // Received from MainLayout (which got it from context)\n  onResetFilters,\n  children,\n  title = \"Фільтри пошуку\"\n}) => {\n  // Can also get controls directly from context if needed here\n  // const { closeFilterPanel } = useFilterPanel(); \n  \n  // Using the passed onClose function (which comes from context via MainLayout)\n  // for both the X button and the mouse leave event.\n\n  return (\n    <>\n      {/* Overlay for when the panel is open */}\n      {isOpen && (\n        <div \n          className=\"fixed inset-0 bg-black bg-opacity-50 z-30 transition-opacity duration-300 ease-in-out md:hidden\"\n          onClick={onClose} // Use onClose from props\n          aria-hidden=\"true\"\n        ></div>\n      )}\n\n      {/* Filter Panel */}\n      <div\n        className={`fixed top-0 left-0 h-full w-72 sm:w-80 bg-white dark:bg-gray-800 shadow-xl z-40\n                   transform transition-transform duration-300 ease-in-out \n                   ${isOpen ? 'translate-x-0' : '-translate-x-full'}`}\n        role=\"dialog\"\n        aria-modal=\"true\"\n        aria-labelledby=\"filter-panel-title\"\n        onMouseLeave={onClose} // Use onClose from props\n      >\n        <div className=\"flex flex-col h-full\">\n          {/* Header */}\n          <div className=\"flex justify-between items-center p-4 border-b border-gray-200 dark:border-gray-700\">\n            <h2 id=\"filter-panel-title\" className=\"text-lg font-semibold text-gray-800 dark:text-gray-100\">\n              {title}\n            </h2>\n            <button \n              onClick={onClose} // Use onClose from props\n              aria-label=\"Закрити панель фільтрів\"\n              className=\"p-1 rounded-md text-gray-500 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-primary-500\"\n            >\n              {/* Close Icon (X) */}\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n          </div>\n\n          {/* Filter Content Area */}\n          <div className=\"flex-grow p-4 overflow-y-auto space-y-6\">\n            {children}\n          </div>\n\n          {/* Footer / Reset Button */}\n          <div className=\"p-4 border-t border-gray-200 dark:border-gray-700\">\n            <button\n              onClick={onResetFilters}\n              className=\"w-full px-4 py-2 bg-red-500 hover:bg-red-600 dark:bg-red-600 dark:hover:bg-red-700 text-white rounded-lg font-medium transition-colors duration-150 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 dark:focus:ring-offset-gray-800\"\n            >\n              Скинути фільтри пошуку\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default FilterPanel; ","import React from 'react';\nimport RefreshButton from '../components/common/RefreshButton';\nimport FilterPanel from '../components/common/FilterPanel';\nimport { useFilterPanel } from '../contexts/FilterPanelContext';\n\ninterface MainLayoutProps {\n  children: React.ReactNode;\n  filterPanelContent: React.ReactNode;\n  onRefresh: () => void;\n  isRefreshing?: boolean;\n  onResetFilters: () => void;\n}\n\nconst MainLayout: React.FC<MainLayoutProps> = ({\n  children,\n  filterPanelContent,\n  onRefresh,\n  isRefreshing = false,\n  onResetFilters,\n}) => {\n  const { isFilterPanelOpen, openFilterPanel, closeFilterPanel } = useFilterPanel();\n\n  return (\n    <div className=\"main-layout flex flex-col h-full\">\n      <div className=\"flex flex-row flex-grow gap-4\">\n        <div \n          className=\"hidden sm:block fixed left-0 top-0 bottom-0 w-4 z-30 cursor-pointer\"\n          onMouseEnter={openFilterPanel}\n        >\n          <div className=\"h-full w-px bg-gray-300 dark:bg-gray-600 opacity-50 hover:opacity-100 transition-opacity\"></div>\n        </div>\n\n        <div className=\"content-area flex-grow w-full\">\n          {children}\n        </div>\n      </div>\n      \n      <div className=\"fixed bottom-6 right-6 z-20\">\n        <RefreshButton onClick={onRefresh} isLoading={isRefreshing} />\n      </div>\n\n      <FilterPanel \n        isOpen={isFilterPanelOpen} \n        onClose={closeFilterPanel}\n        onResetFilters={onResetFilters}\n      >\n        {filterPanelContent}\n      </FilterPanel>\n    </div>\n  );\n};\n\nexport default MainLayout; ","import React, { useState, useEffect } from 'react';\nimport MainLayout from '../layouts/MainLayout';\n\n// Placeholder for actual filter components for Products\nconst ProductsFilterPanelContent: React.FC = () => {\n  return (\n    <div>\n      <h3 className=\"text-md font-semibold mb-3 text-gray-700 dark:text-gray-200\">Ціна</h3>\n      {/* Placeholder for Price Slider */}\n      <div className=\"p-2 border border-dashed rounded mb-4 h-16 flex items-center justify-center text-sm text-gray-400 dark:text-gray-500\">Price Slider Area</div>\n\n      <h3 className=\"text-md font-semibold mb-3 text-gray-700 dark:text-gray-200\">Заміри (СМ)</h3>\n      <div className=\"p-2 border border-dashed rounded mb-4 h-16 flex items-center justify-center text-sm text-gray-400 dark:text-gray-500\">Measurements Slider Area</div>\n\n      <h3 className=\"text-md font-semibold mb-3 text-gray-700 dark:text-gray-200\">Розмір</h3>\n      <div className=\"p-2 border border-dashed rounded mb-4 h-16 flex items-center justify-center text-sm text-gray-400 dark:text-gray-500\">Size Slider Area</div>\n\n      <h3 className=\"text-md font-semibold mb-2 text-gray-700 dark:text-gray-200\">Бренд</h3>\n      {/* Placeholder for Brand checkboxes with search */}\n      <div className=\"p-2 border border-dashed rounded mb-4 h-24 flex items-center justify-center text-sm text-gray-400 dark:text-gray-500\">Brand Filter Area</div>\n      \n      {/* Add other filter sections (Вид, Модель, Стать, Країна, Постачальник, Стан) as placeholders */}\n      <p className=\"text-xs text-center text-gray-400 dark:text-gray-500\">More filters here...</p>\n    </div>\n  );\n};\n\ninterface ProductsPageProps {\n  currentSearchTerm: string; // Receive search term from App\n}\n\nconst ProductsPage: React.FC<ProductsPageProps> = ({ currentSearchTerm }) => {\n  const [isRefreshing, setIsRefreshing] = useState(false);\n\n  // Effect to react to global search changes if needed for filtering\n  useEffect(() => {\n    if (currentSearchTerm !== undefined) {\n        console.log('ProductsPage received search term:', currentSearchTerm);\n        // TODO: Implement actual filtering logic based on currentSearchTerm\n    }\n  }, [currentSearchTerm]);\n\n  const handleRefresh = () => {\n    console.log('Refreshing products...');\n    setIsRefreshing(true);\n    setTimeout(() => {\n      setIsRefreshing(false);\n      console.log('Products refreshed!');\n    }, 1500);\n  };\n\n  const handleResetFilters = () => {\n    console.log('Resetting product filters...');\n    // Logic to reset all filter states for products\n  };\n\n  return (\n    <MainLayout\n      filterPanelContent={<ProductsFilterPanelContent />}\n      onRefresh={handleRefresh}\n      isRefreshing={isRefreshing}\n      onResetFilters={handleResetFilters}\n    >\n      {/* Main content for Products Page */}\n      <div className=\"p-4 bg-white dark:bg-gray-800 shadow-md rounded-lg\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h1 className=\"text-2xl font-semibold text-gray-900 dark:text-gray-100\">Товари</h1>\n          {/* Display the search term received from props */}\n          {currentSearchTerm && <p className='text-sm text-gray-500 dark:text-gray-400'>Активний пошук: \"{currentSearchTerm}\"</p>}\n        </div>\n        \n        {/* Placeholder for ProductsTable */}\n        <div className=\"table-placeholder min-h-[60vh] border border-dashed border-gray-300 dark:border-gray-600 rounded flex justify-center items-center\">\n          <p className=\"text-gray-500 dark:text-gray-400\">Таблиця товарів буде тут</p>\n        </div>\n\n        <div className=\"mt-4 flex items-center\">\n          <input \n            type=\"checkbox\" \n            id=\"show-unsold-products\"\n            className=\"h-4 w-4 text-primary-600 border-gray-300 rounded focus:ring-primary-500 dark:focus:ring-primary-400 dark:bg-gray-700 dark:border-gray-600\"\n          />\n          <label htmlFor=\"show-unsold-products\" className=\"ml-2 text-sm text-gray-700 dark:text-gray-300\">\n            Показувати тільки непродані\n          </label>\n        </div>\n      </div>\n    </MainLayout>\n  );\n};\n\nexport default ProductsPage; "],"names":["_ref","onClick","isLoading","label","_jsx","disabled","className","children","_jsxs","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","d","fillRule","clipRule","isOpen","onClose","onResetFilters","title","_Fragment","role","onMouseLeave","id","strokeLinecap","strokeLinejoin","filterPanelContent","onRefresh","isRefreshing","isFilterPanelOpen","openFilterPanel","closeFilterPanel","useFilterPanel","onMouseEnter","RefreshButton","FilterPanel","ProductsFilterPanelContent","currentSearchTerm","setIsRefreshing","useState","useEffect","undefined","console","log","MainLayout","handleRefresh","setTimeout","handleResetFilters","type","htmlFor"],"sourceRoot":""}